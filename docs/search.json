[{"path":"/articles/EDCHM.html","id":"three-ways-to-obtain-one-model","dir":"Articles","previous_headings":"","what":"Three Ways to Obtain One Model","title":"EDCHM","text":"EDCHM provides three methods obtaining hydrological model simulates hydrological process.","code":""},{"path":"/articles/EDCHM.html","id":"use-the-pre-defined-model","dir":"Articles","previous_headings":"Three Ways to Obtain One Model","what":"Use the Pre-Defined Model","title":"EDCHM","text":"EDCHM offers three pre-defined models: (Note: models _full suffix return variables list. Otherwise, standard model returns discharge speed calibration process.) EDCHM_GR4J() EDCHM_GR4J_full(): original GR4J model, airGR::RunModel_GR4J(). EDCHM_mini() EDCHM_mini_full(): minimal model structure random process method. EDCHM_snow() EDCHM_snow_full(): snow-structure model random process method. function arguments show boundary (input) variable parameters","code":""},{"path":"/articles/EDCHM.html","id":"create-a-model-with-a-pre-defined-model-structure","dir":"Articles","previous_headings":"Three Ways to Obtain One Model","what":"Create a Model with a Pre-Defined Model Structure","title":"EDCHM","text":"build_modell() function offers standard structure contains 15 processes 34 sub-structures, can generate ten millions models. build model, need : Provide method name every process: Create model build_modell(), function return rang parameters R-Space .cpp-file folder, represents model. NOTE: Make sure model name file path. .cpp-file looks like source code EDCHM_mini, shown next section use .","code":"## select the process method my_process_method <- c(  atmosSnow = \"atmosSnow_ThresholdT\", evatransPotential = \"NULL\", evatransLand = \"NULL\", evatransSoil = \"evatransActual_SupplyRatio\", intercep = \"NULL\", snowMelt = \"snowMelt_Kustas\", infilt = \"infilt_AcceptRatio\", percola = \"percola_SupplyRatio\", inteflow = \"NULL\", capirise = \"NULL\", baseflow = \"baseflow_SupplyRatio\", lateral = \"lateral_GR4Jfix\", confluenLand = \"confluenIUH_Kelly\", confluenSoil = \"NULL\", confluenGround = \"confluenIUH_Nash\" ) ## build my_ParamRange <- build_modell(my_process_method, \"E:\\\\Kan_Lei\\\\try\", \"TestModel\")  ## check my_ParamRange #>                               min   max #> param_atmos_thr_Ts         -1e+00 3.000 #> param_baseflow_sur_k        1e-02 1.000 #> param_confluenGround_nas_n  1e+00 8.000 #> param_confluenLand_kel_k    1e+00 4.000 #> param_evatrans_sur_k        1e-01 1.000 #> param_infilt_acr_k          1e-02 1.000 #> param_lateral_grf_gamma     1e-02 5.000 #> param_percola_sur_k         1e-02 1.000 #> param_snow_kus_fE           5e-04 0.003 #> param_snow_kus_fT           5e-02 1.000"},{"path":"/articles/EDCHM.html","id":"manually-build-a-model-with-edchm-modules","dir":"Articles","previous_headings":"Three Ways to Obtain One Model","what":"Manually build a model with EDCHM modules","title":"EDCHM","text":"Although build_modell() offers possibility generating million models, may still requirement create model different structure. example, may involve adding deleting processes, adding layers. shown model source code EDCHM_mini, straightforward assemble model EDCHM modules. steps follows: Select deciding processes methods, Reference-Page shows processes process-methods. Fill arguments module (function) specific variables parameters. original argument names well-defined, can used variable names. function arguments looks like: code line model source code looks like: Situations arguments names can used directly. Set processing module, relationship calculated process-variable standard variables. infiltration water infiltrate land-layer soil-layer, remaining water flow runoff river catchment outlet. two lines added model. Complete boundary conditions (BC) variables (input, meteorological data) matrix-form. BC variables always given time series, must matrix form, example, atmos_precipitation_mm atmos_potentialEvatrans_mm. variables defined matrices input, time dimension (index ) must specified. Complete outflow variables matrix-form. outflow variables refer variables flow catchment outlet “routing”, example, land_runoff_mm ground_baseflow_mm. variables must declared matrices, time dimension (index ) must specified. Define parameters input (BC) variables arguments declare variables. six steps, can build new model, important ensure logic relationships variables correct.","code":"infilt_UBC(   land_water_mm,   land_impermeableFrac_1,   soil_water_mm,   soil_capacity_mm,   param_infilt_ubc_P0AGEN ) soil_infilt_mm = infilt_UBC(land_water_mm, land_impermeableFrac_1, soil_water_mm, soil_capacity_mm, param_infilt_ubc_P0AGEN); soil_infilt_mm = infilt_UBC(land_water_mm, land_impermeableFrac_1, soil_water_mm, soil_capacity_mm, param_infilt_ubc_P0AGEN); soil_water_mm += soil_infilt_mm; land_runoff_mm(i, _) = land_water_mm - soil_infilt_mm; soil_evatrans_mm = evatransActual_UBC(atmos_potentialEvatrans_mm(i, _), soil_water_mm, soil_capacity_mm, param_evatrans_ubc_gamma); soil_water_mm += - soil_evatrans_mm; land_water_mm = atmos_precipitation_mm(i, _); land_runoff_mm(i, _) = land_water_mm - soil_infilt_mm;  ground_baseflow_mm(i, _) = ground_baseflow_mm(i, _) + baseflow_temp; NumericMatrix EDCHM_mini( // basci parameter int n_time,  int n_spat, // BC data (Input) NumericMatrix atmos_potentialEvatrans_mm,  NumericMatrix atmos_precipitation_mm, // parameters, that schould be estimated and innitial condition (IC) data NumericVector ground_capacity_mm,  NumericVector ground_water_mm,  NumericVector land_impermeableFrac_1,  NumericVector soil_capacity_mm,  NumericVector soil_potentialPercola_mm,  NumericVector soil_water_mm,  // parameters, that need to calibrated NumericVector confluenLand_responseTime_TS,  NumericVector confluenGround_responseTime_TS,  NumericVector param_baseflow_grf_gamma,  NumericVector param_confluenLand_kel_k,  NumericVector param_evatrans_ubc_gamma,  NumericVector param_infilt_ubc_P0AGEN,  NumericVector param_percola_arn_k,  NumericVector param_percola_arn_thresh ) {  // declare the vector-variable, that contain only on dimension time like confluenLand_iuh_1 and confluenGround_iuh_1 // or spat like land_water_mm, soil_evatrans_mm, soil_infilt_mm and soil_percolation_mm NumericVector land_water_mm, soil_evatrans_mm, soil_infilt_mm, soil_percolation_mm, confluenLand_iuh_1, confluenGround_iuh_1; // declare the matric-variable, that contain two dimensions time and spat NumericMatrix land_runoff_mm(n_time, n_spat), ground_baseflow_mm(n_time, n_spat), confluen_streamflow_mm(n_time, n_spat);  return confluen_streamflow_mm; }"},{"path":[]},{"path":"/articles/EDCHM.html","id":"run-the-pre-defined-model-from-edchm","dir":"Articles","previous_headings":"Run the model","what":"Run the pre-defined model from EDCHM","title":"EDCHM","text":"pre-defined model can used like normal functions. just need provide input data parameters correct format specified function arguments. example: input (boundary condition) data, including precipitation (P) potential evapotranspiration (PET), well simulated model result discharge (contribution mm/TS, equivalent precipitation) (Q), shown :","code":"## reform the data into matrix mat_EDCHM_TestData <- EDCHM_TestData |> as.matrix()  ## Parameter initial Param_mini <- c(land_impermeableFrac_1 = .5,                       soil_potentialPercola_mm = 5,                       confluenLand_responseTime_TS = 2,                       confluenGround_responseTime_TS = 4,                       Param_baseflow_grf_gamma = 3,                       Param_confluenLand_kel_k = 2,                       Param_evatrans_ubc_gamma = 1.5,                       Param_infilt_ubc_P0AGEN = 2,                       Param_percola_arn_k = .6,                       Param_percola_arn_thresh = .7)  ## run the model test_Q <- EDCHM_mini(     180, # n_time, number of time step     1, # n_spat, number of spatial unit     mat_EDCHM_TestData[,\"EC\"] |> as.matrix(), # atmos_potentialEvatrans_mm, Input matrix     mat_EDCHM_TestData[,\"PA2\"] |> as.matrix(), # atmos_precipitation_mm, Input matrix     200., # ground_capacity_mm, (physical based) parameter     100., # ground_water_mm, initial condition     Param_mini[\"land_impermeableFrac_1\"],      200., # soil_capacity_mm, (physical based) parameter     Param_mini[\"soil_potentialPercola_mm\"],      100., # soil_water_mm, initial condition     Param_mini[\"confluenLand_responseTime_TS\"],      Param_mini[\"confluenGround_responseTime_TS\"],      Param_mini[\"Param_baseflow_grf_gamma\"],      Param_mini[\"Param_confluenLand_kel_k\"],      Param_mini[\"Param_evatrans_ubc_gamma\"],      Param_mini[\"Param_infilt_ubc_P0AGEN\"],      Param_mini[\"Param_percola_arn_k\"],      Param_mini[\"Param_percola_arn_thresh\"])"},{"path":"/articles/EDCHM.html","id":"run-the-model-with-cpp-source-code","dir":"Articles","previous_headings":"Run the model","what":"Run the model with cpp source code","title":"EDCHM","text":"model still CPP source code, first need compile function using Rcpp::sourceCpp() function. example: model compiled, can use normal function providing input data parameters correct format.","code":"Rcpp::sourceCpp(\"path/to/your/model.cpp\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kan Lei. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lei K (2023). EDCHM: Editable Distributed Conceptual (c++) Hydrological Model. https://github.com/LuckyKanLei/EDCHM, https://luckykanlei.github.io/EDCHM/.","code":"@Manual{,   title = {EDCHM: Editable Distributed Conceptual (c++) Hydrological Model},   author = {Kan Lei},   year = {2023},   note = {https://github.com/LuckyKanLei/EDCHM, https://luckykanlei.github.io/EDCHM/}, }"},{"path":"/index.html","id":"editable-distributed-conceptual-c-hydrological-model-","dir":"","previous_headings":"","what":"Editable Distributed Conceptual (c++) Hydrological Model","title":"Editable Distributed Conceptual (c++) Hydrological Model","text":"EDCHM package flexible hydrological modeling framework incorporates collection well-known models, GR4J , HBV , VIC , UBC . model divided clear, well-defined processes individual, self-contained modules. EDCHM allows users easily select combine different processes create new model structures, also choose range methods specific process. provides high degree flexibility customization. EDCHM also allows users divide research catchment sub-basins, grids, hydrological response units (HRUs), providing high degree spatial resolution flexibility. enables users capture simulate water cycle different scales, regional level level individual land units catchment areas.","code":""},{"path":"/index.html","id":"layer-and-process","dir":"","previous_headings":"","what":"Layer and Process","title":"Editable Distributed Conceptual (c++) Hydrological Model","text":"using EDCHM framework, necessary basic understanding concepts.  EDCHM framework, Layer defined vertical space common characteristics. EDCHM defines five basic layers: atmosLy: stores meteorological data doesn’t interact hydrological processes (current version). snowLy: layer snow. landLy: consists two sublayers. Sublayer intcpt storage intercepted water, can evaporated. Sublayer land serves temperature layer “pounded water” doesn’t storage capacity. soilLy: defined unsaturated zone land surface water table groundwater. groundLy: defined saturated zone groundwater. EDCHM framework, Process related movement distribution water Earth. occur single layer, occur two layers. defined 9 hydrological processes: snowMelt: melt snow liquid water. intercep: intercept water arrive land surface. evatransActual: calculate actual evapotranspiration interception water th soil. infilt: water land surface enters soil. percola: soil water pores aquifer movement ground water. inteflow: runoff soil layer, soilLy directly streams rivers. capirise: ground water upward unsaturated soil layer. baseflow: portion groundwater, directly streams rivers. lateral: water exchange basin groundwater layer. confluenIUH: runoff (runoff, interflow, baseflow) hydrological unit rivers, process water volume changed distribution time axis recalculeted IUH (Instantaneous Unit Hydrograph) method. addition, two meteological process: atmosSnow: devide precipitation rainfall snowfall. evatransPotential: calculates potential evapotranspiration. considered meteorological processes can directly obtained meteorological datasets calculated using meteorological data. results processes serve always input data hydrological processes. evatransPotential crucial step determining actual evapotranspiration hydrological models.","code":""},{"path":"/index.html","id":"variable-and-parameter-define","dir":"","previous_headings":"","what":"Variable and Parameter define","title":"Editable Distributed Conceptual (c++) Hydrological Model","text":"clear understanding layers processes, can now move basic definitions context modeling. variable names EDCHM framework composed three parts: group-name, physical-name variable-units parts separated underscore _. group-name: name Layer variable located. Sometimes can also Process name time, one important dimension. group-name limited maximum 8 characters must lowercase letters. physical-name: physical variable name, uses camelCase combine multiple words. water volume always simplified water. variable-units: physical units variable simplify program, time-dependent variables use TS time unit, defined model, can 1 hour, 4, 12, 24 hours , time unit included variable name. Additionally, variables assumed homogeneous area, area unit square meter (m2) also included variable name. group_variableName_unit like land_water_mm, atmos_temperature_Cel following tables list model variables corresponding formula symbols used EDCHM: state variables Capicity layer storage: flux variables potential flux: stream flow m3/TS m3/s also flux dimension: Additional also symbols program-view: : collection data one group layer : data atmosLy : data landLy : data snowLy : data soilLy : data groundLy : data (one) landLy, snowLy, soilLy groundLy : function modulr e.g.  ","code":""},{"path":"/index.html","id":"parameter-define","dir":"","previous_headings":"","what":"Parameter define","title":"Editable Distributed Conceptual (c++) Hydrological Model","text":"parameters defined every function topic naming convention parameters consists four parts: prefix param, process name Parameters make prefix , Process name (sometimes Layer name), abbreviation method three small letters, original parameter name. allows clear consistent naming parameters within program. param_process_mtd_k like param_atmos_ubc_A0FORM, param_infilt_hbv_beta every function topic, range parameters provided format <low, upper>. all_param list also parameters EDCHM.","code":""},{"path":"/index.html","id":"module-define","dir":"","previous_headings":"","what":"Module define","title":"Editable Distributed Conceptual (c++) Hydrological Model","text":"last section, ten hydrological two meteorological processes defined conceptual view. Now defined programming view: every process one output variable several input data (data parameters): module defined : specific process different method well-know models. name module composed three parts: process name method name: process_Method like evatransActual_VIC evatransActual_LiangLand following figure shows 12 processes 62 modules defined date.","code":""},{"path":"/index.html","id":"build-a-model-and-calibrate-the-parameters","dir":"","previous_headings":"","what":"Build a model and calibrate the parameters","title":"Editable Distributed Conceptual (c++) Hydrological Model","text":"generally way using regular model can described follows: Select model suits research needs acquire necessary software (script). Prepare input data parameters ensure accurate complete. Use observed data calibrate model’s parameters. Validate optimized parameters comparing known results models. Apply model optimized parameter sets research. EDCHM, need first build model. process building model intricate nuanced task. requires deep understanding system hydrological modelling ensure every component (process) properly integrated optimized. Identify essential processes involved research. Organize connect processes logical sequence reflects real-world system data-flow. Select appropriate method (module) process, taking account specific requirements constraints research. Assemble model script using chosen modules, compile working model can tested refined. following approach, can create custom-built model tailored specific research needs, can easily adjusted updated new information becomes available. despite complexity building model, EDCHM also offers powerful tools build_modell make process straightforward efficient. EDCHM defined well-organized structure, just need choose necessary process method every process. chosen processes methods, build_modell automatically generate model script, includes input arguments. time also return parameter ranges needed calibration validation. standard structure, twelve processes available selection. However, can also choose use subset processes, six minimal processes. Certainly, limited standard minimal structures building model build_modell. Instead, freedom choose combination processes relevant research. mininal-, snow- standard-structure showed fowling figure:  EDCHM offers also three compiled models EDCHM_mini, EDCHM_snow EDCHM_GR4J. EDCHM_mini EDCHM_snow used mininal- snow-structure random method. EDCHM_GR4J just GR4J EDCHM version, results produced EDCHM_GR4J verified original airGR::RunModel_GR4J() implementation GR4J model, airGR. Overall, build_modell offers flexible customizable approach building models, allowing create model tailored specific research needs requirements. details goto section build_modell. building model, can proceed calibrate parameters. Typically, need evaluate simulated results observations . can use hydroGOF package, offers many goodness--fit (GOF) functions, Nash-Sutcliffe efficiency (NSE) Kling-Gupta efficiency (KGE). still need evaluation function, takes parameters input produces evaluation results output. inputs outputs given calibration algorithm function, decides next set probe parameters based result GOF. evaluation function flexible depends whether parameters lumped distributed, whether need calibrated, whether directly measured calculated categorical data soil class land use. EDCHM offer evaluation function, difficult create one. EDCHM offers two calibration algorithm functions: cali_DDS() cali_UVS(). cali_DDS() powerful recommended cases. cali_UVS() recommended specific tasks original algorithm. details, see cali section documentation.","code":""},{"path":"/reference/all_param.html","id":null,"dir":"Reference","previous_headings":"","what":"parameters — all_param","title":"parameters — all_param","text":"parameters EDCHM","code":""},{"path":"/reference/all_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameters — all_param","text":"","code":"lines_all_parameter"},{"path":"/reference/all_param.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"parameters — all_param","text":"object class character length 72.","code":""},{"path":"/reference/all_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parameters — all_param","text":"param_atmos_thr_Ts <-1, 3> (Cel) threshold air temperature snow, parameter atmosSnow_ThresholdT() param_atmos_ubc_A0FORM <0.01, 3> (Cel) threshold air temperature snow, can equal small 0, parameter atmosSnow_UBC() param_baseflow_grf_gamma <2, 7> exponential parameter baseflow_GR4Jfix() param_baseflow_sur_k <0.01, 1> coefficient parameter baseflow_SupplyRatio() param_baseflow_sup_k <0.01, 1> coefficient parameter baseflow_SupplyPow() param_baseflow_sup_gamma <0, 1> exponential parameter baseflow_SupplyPow() param_baseflow_map_gamma <0.1, 5> exponential parameter baseflow_MaxPow() param_baseflow_thp_thresh <0.1, 0.9> coefficient parameter baseflow_ThreshPow() param_baseflow_thp_gamma <0.1, 5> exponential parameter baseflow_ThreshPow() param_baseflow_arn_thresh <0.1, 0.9> coefficient parameter baseflow_ThreshPow() param_baseflow_arn_k <0.1, 1> exponential parameter baseflow_ThreshPow() param_capirise_acr_k <0.01, 1> coefficient parameter capirise_AcceptRatio() param_capirise_acp_k <0.01, 1> coefficient parameter capirise_AcceptPow() param_capirise_acp_gamma <0.01, 1> exponential parameter capirise_AcceptPow() param_confluen_kel_k <1, 4> parameter forconfluenIUH_Kelly() param_confluen_nas_n <1, 8> parameter forconfluenIUH_Nash() param_evatrans_tur_k <0.6, 1> parameter evatransPotential_TurcWendling(), higher value closer sea param_evatrans_sur_k <0.1, 1> parameter evatransActual_SupplyRatio(), ratio potential ET, estimated actually ET param_evatrans_sup_k <0.1, 1> parameter evatransActual_SupplyPow(), ratio method param_evatrans_sup_gamma <1, 5> parameter evatransActual_SupplyPow(), exponent method param_evatrans_vic_gamma <0.2, 5> parameter evatransActual_VIC() param_evatrans_ubc_gamma <0.5, 2> parameter evatransActual_UBC() param_evatrans_lia_gamma <0.4, 1> parameter evatransActual_LiangLand() param_evatrans_lia_B <0.01, 3> parameter evatransActual_LiangSoil() param_infilt_ubc_P0AGEN <0.1, 4> coefficient parameter infilt_UBC() param_infilt_sur_k <0.01, 1> coefficient parameter infilt_SupplyRatio() param_infilt_acr_k <0.01, 1> coefficient parameter infilt_AcceptRatio() param_infilt_sup_k <0.01, 1> coefficient parameter infilt_SupplyPow() param_infilt_sup_gamma <0, 1> parameters infilt_SupplyPow() param_infilt_acp_k <0.01, 1> coefficient parameter infilt_AcceptPow() param_infilt_acp_gamma <0.001, 5> parameters infilt_AcceptPow() param_infilt_hbv_beta <0.001, 5> parameters infilt_HBV() param_infilt_xaj_B <0.01, 3> parameters infilt_XAJ() param_infilt_vic_B <0.01, 3> parameters infilt_VIC() param_inteflow_grf_k <0.01, 1> coefficient parameter inteflow_GR4Jfix() param_inteflow_grf_gamma <2, 7> exponential parameter baseflow_GR4Jfix() param_inteflow_map_gamma <0.1, 5> exponential parameter inteflow_MaxPow() param_inteflow_thp_thresh <0.1, 0.9> coefficient parameter inteflow_ThreshPow() param_inteflow_thp_gamma <0.1, 5> exponential parameter inteflow_ThreshPow() param_inteflow_arn_thresh <0.1, 0.9> coefficient parameter inteflow_ThreshPow() param_inteflow_arn_k <0.1, 1> exponential parameter inteflow_ThreshPow() param_inteflow_sp0_k <0.01, 1> coefficient parameter inteflow_SupplyPow0() param_inteflow_sp0_gamma <0, 1> exponential parameter inteflow_SupplyPow0() param_inteflow_sup_k <0.01, 1> coefficient parameter inteflow_SupplyPow() param_inteflow_sup_gamma <0, 7> parameter inteflow_SupplyPow() param_inteflow_sur_k <0.01, 1> coefficient parameter inteflow_SupplyRatio() param_lateral_sup_k <-1, 1> coefficient parameter lateral_SupplyPow() param_lateral_sup_gamma <0.01, 5> parameters lateral_SupplyPow() param_lateral_sur_k <-2, 1> coefficient parameter lateral_SupplyRatio() param_lateral_grf_gamma <0.01, 5> parameter lateral_GR4Jfix() param_lateral_thp_thresh <0.1, 0.9> coefficient parameter lateral_ThreshPow() param_lateral_thp_gamma <0.1, 5> exponential parameter lateral_ThreshPow() param_lateral_arn_thresh <0.1, 0.9> coefficient parameter lateral_ThreshPow() param_lateral_arn_k <0.1, 1> exponential parameter lateral_ThreshPow() param_percola_grf_k <0.01, 1> coefficient parameter percola_GR4Jfix() param_percola_map_gamma <0.1, 5> exponential parameter percola_MaxPow() param_percola_thp_thresh <0.1, 0.9> coefficient parameter percola_ThreshPow() param_percola_thp_gamma <0.1, 5> exponential parameter percola_ThreshPow() param_percola_arn_thresh <0.1, 0.9> coefficient parameter percola_ThreshPow() param_percola_arn_k <0.1, 1> exponential parameter percola_ThreshPow() param_percola_sup_k <0.01, 1> coefficient parameter percola_SupplyPow() param_percola_sup_gamma <0, 7> parameter percola_SupplyPow() param_percola_sur_k <0.01, 1> coefficient parameter percola_SupplyRatio() param_snow_kus_fE <0.0005, 0.003> (mm/m2/MJ) snow melt temperature parameter snowMelt_Factor() param_snow_kus_fT <0.05, 1> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter snowMelt_Factor() param_snow_fac_Tmelt <0, 3> (Cel) snow melt temperature parameter snowMelt_Factor() param_snow_fac_f <0.05, 2> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter snowMelt_Factor()","code":""},{"path":"/reference/all_vari.html","id":null,"dir":"Reference","previous_headings":"","what":"variable define — all_vari","title":"variable define — all_vari","text":"topic variable EDCHM defined.","code":""},{"path":"/reference/all_vari.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"variable define — all_vari","text":"time_step_h <1, 24> (h) time step hour time_dayOfYear_ <1, 366> (d) number day year 1 (1 January) 365 366 (31 December) atmos_precipitation_mm (mm/m2/TS) precipitaion volum atmos_rain_mm (mm/m2/TS) precipitation rain form atmos_snow_mm (mm/m2/TS) precipitation snow form atmos_temperature_Cel (Cel) average air temperature time phase atmos_temperatureMax_Cel (Cel) maximal air temperature time phase atmos_temperatureMin_Cel (Cel) minimal air temperature time phase atmos_solarRadiat_MJ (MJ/m2/TS) solar radiation actually reaches earths surface atmos_netRadiat_MJ (MJ/m2/TS) balance energy absorbed, reflected emitted earths surface difference incoming net shortwave (Rns) net outgoing longwave (Rnl) radiation atmos_relativeHumidity_1 (0, 1) relative humidity atmos_vaporPress_hPa (hPa) actual vapour pressure, can calculated atmos_VaporPress() atmos_saturatVaporPress_hPa (hPa) saturation vapour pressure atmos_temperature_Cel, can calculated atmos_SaturatVaporPress() atmos_windSpeed_m_s (m/s) measured wind speed z m ground surface atmos_windMeasureHeight_m (m) height measurement ground surface atmos_windSpeed2m_m_s (m/s) wind speed 2 m ground surface atmos_potentialEvatrans_mm (mm/m2/TS) potential / reference evapotranspiration land_albedo_1 <0, 1> albedo region land_latitude_Degree (degree) average latitude land_elevation_m (m) average elevation land_impermeableFrac_1 <0, 1> maximum impermeable fraction th soil fully saturated land_water_mm (mm/m2) pounded water volume landLy limit, different land_interceptWater_mm land_interceptWater_mm (mm/m2) initial water volume can intercepted land_interceptCapacity_mm (mm/m2) average intercept Capacity (maximal storage capacity) land_actualEvatrans_mm (mm/m2/TS) actual evapotranspiration landLy land_infiltrat_mm (mm/m2/TS) infiltration landLy soilLy snow_ice_mm (mm/m2) water equivalent ice snowpack soil_fieldCapacityPerc_1 <0, 1> relative ratio (\\(\\theta_fc / \\theta^*\\)) water content can drainage gravity soil_water_mm (mm/m2) water volume soilLy soil_capacity_mm (mm/m2) average soil Capacity (maximal storage capacity) soil_interflow_mm (mm/m2/TS) subsurface flow directly river soil_actualEvatrans_mm (mm/m2/TS) actual evapotranspiration soilLy soil_potentialPercola_mm <0.01, 7> (mm/m2/TS) potential percolation soil_potentialInteflow_mm <0.01, 7> (mm/m2/TS) potential interflow soil_potentialCapirise_mm <0.01, 7> (mm/m2/TS) potential capillary rise ground_water_mm (mm/m2/TS) water volume groundLy ground_capacity_mm (mm/m2) water storage capacity groundLy ground_lateral_mm (mm/m2/TS) lateral flow, exchange outside region. can NEGATIV ground_capillarise_mm (mm/m2/TS) capillary rise groundLy soilLy ground_potentialLateral_mm <-7, 7> (mm/m2/TS) potential lateral flow ground_potentialBaseflow_mm <0.01, 7> (mm/m2/TS) potential baseflow confluen_inputWater_mm, land_runoff_mm, ground_baseflow_mm (mm/m2) input water volum every routeline confluen_iuh_1, confluen_iuhLand_1, confluen_iuhSoil_1, confluen_iuhGround_1 (vector num, sume() = 1) ratio every timestep, can calculated confluenIUH_GR4J1(), confluenIUH_GR4J2() confluen_responseTime_TS (TS) response concentration time every routeline water_mm (mm/m2/TS) water volume soilLy, groundLy intercept landLy, soil_water_mm, ground_water_mm land_interceptWater_mm capacity_mm (mm/m2) water storage capacity soilLy, groundLy intercept landLy, soil_capacity_mm, ground_capacity_mm orland_interceptCapacity_mm","code":""},{"path":"/reference/atmos.html","id":null,"dir":"Reference","previous_headings":"","what":"functions for atmosphere — atmos","title":"functions for atmosphere — atmos","text":"calculate basic physical, meteorological variables","code":""},{"path":"/reference/atmos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"functions for atmosphere — atmos","text":"","code":"atmos_NettoRadiat(   time_dayOfYear_,   atmos_temperature_Cel,   atmos_temperatureMax_Cel,   atmos_temperatureMin_Cel,   atmos_relativeHumidity_1,   atmos_solarRadiat_MJ,   land_latitude_Degree,   land_elevation_m )  atmos_SaturatVaporPress(atmos_temperature_Cel)  atmos_VaporPress(atmos_temperature_Cel, atmos_relativeHumidity_1)  atmos_WindSpeed2m(atmos_windSpeed_m_s, atmos_windMeasureHeight_m)"},{"path":"/reference/atmos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"functions for atmosphere — atmos","text":"time_dayOfYear_ <1, 366> (d) number day year 1 (1 January) 365 366 (31 December) atmos_temperature_Cel (Cel) average air temperature time phase atmos_temperatureMax_Cel (Cel) maximal air temperature time phase atmos_temperatureMin_Cel (Cel) minimal air temperature time phase atmos_relativeHumidity_1 (0, 1) relative humidity atmos_solarRadiat_MJ (MJ/m2/TS) solar radiation actually reaches earths surface land_latitude_Degree (degree) average latitude land_elevation_m (m) average elevation atmos_windSpeed_m_s (m/s) measured wind speed z m ground surface atmos_windMeasureHeight_m (m) height measurement ground surface","code":""},{"path":"/reference/atmos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"functions for atmosphere — atmos","text":"atmos_netRadiat_MJ (MJ/m2/TS) balance energy absorbed, reflected emitted earths surface difference incoming net shortwave (Rns) net outgoing longwave (Rnl) radiation atmos_netRadiat_MJ\t(MJ/m2/TS) balance energy absorbed, reflected emitted earth's surface difference incoming net shortwave (Rns) net outgoing longwave (Rnl) radiation atmos_vaporPress_hPa\t(hPa) actual vapour pressure, can calculated atmos_VaporPress() atmos_WindSpeed2m_m_s (m/s) wind speed 2 m ground surface","code":""},{"path":"/reference/atmosSnow.html","id":null,"dir":"Reference","previous_headings":"","what":"caculate snowfall — atmosSnow","title":"caculate snowfall — atmosSnow","text":"concept conceptual HM, amount snowfall always calculated temperature \\(T\\) precipitation \\(P\\) availability. proportion snowfall always determined air temperature. can give function : \\[P_s = f_{atmosSnow}(D_{atms})\\] : \\[P_s = f_{atmosSnow}(P, T) = k^*P\\] \\[0 \\leq k^* \\leq 1\\] \\(P\\) atmos_precpitation_mm \\(T\\) atmos_teperature_Cel \\(k^*\\) estimated portion different atmosSnow methods estimate portion \\(k^*\\). output density distribution 2 methods:","code":""},{"path":"/reference/atmosSnow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"caculate snowfall — atmosSnow","text":"","code":"atmosSnow_ThresholdT(   atmos_precipitation_mm,   atmos_temperature_Cel,   param_atmos_thr_Ts )  atmosSnow_UBC(   atmos_precipitation_mm,   atmos_temperature_Cel,   param_atmos_ubc_A0FORM )"},{"path":"/reference/atmosSnow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"caculate snowfall — atmosSnow","text":"atmos_precipitation_mm (mm/m2/TS) precipitaion volum atmos_temperature_Cel (Cel) average air temperature time phase param_atmos_thr_Ts <-1, 3> (Cel) threshold air temperature snow, parameter atmosSnow_ThresholdT() param_atmos_ubc_A0FORM <0.01, 3> (Cel) threshold air temperature snow, can equal small 0, parameter atmosSnow_UBC()","code":""},{"path":"/reference/atmosSnow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"caculate snowfall — atmosSnow","text":"atmos_snow_mm (mm/m2/TS) snowfall volume","code":""},{"path":"/reference/atmosSnow.html","id":"-thresholdt-","dir":"Reference","previous_headings":"","what":"_ThresholdT:","title":"caculate snowfall — atmosSnow","text":"temperature threshold defined, estimate portion \\(k^*\\) : \\[k^{*}=1, \\quad T \\leq T_s\\] \\(T_s\\) param_atmos_thr_Ts","code":""},{"path":"/reference/atmosSnow.html","id":"-ubc-quick-and-pipes-","dir":"Reference","previous_headings":"","what":"_UBC (Quick and Pipes 1977) :","title":"caculate snowfall — atmosSnow","text":"estimate portion \\(k^*\\) : \\[k^* = 1- \\frac{T}{T_0}\\] \\[k^* \\geq 0\\] \\(T_0\\) param_atmos_ubc_A0FORM","code":""},{"path":"/reference/atmosSnow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"caculate snowfall — atmosSnow","text":"Quick MC, Pipes (1977). “U.B.C. WATERSHED MODEL / Le Mod攼㸸le Du Bassin Versant U.C.B.” Hydrological Sciences Bulletin, 22(1), 153--161. ISSN 0303-6936, doi: 10.1080/02626667709491701 .","code":""},{"path":"/reference/baseflow.html","id":null,"dir":"Reference","previous_headings":"","what":"baseflow — baseflow","title":"baseflow — baseflow","text":"hydrological modeling, baseflow refers flow water rivers streams sustained release water groundwater. baseflow refers flow water aquifer deeper soil horizon surface water, typically due head gradient fully saturated soil stream  (Craig Tea 2022) . may considered sum contribution deep groundwater exchange river delayed storage  (Craig Tea 2022) . always calculated () water ground layer \\(W_{grnd}\\), can also treated part \\(W_{grnd}\\). However, impact RUs (response units) route river ignored. can give function : \\[F_{base} = f_{baseflow}(D_{grnd})\\] : \\[F_{base} = f_{baseflow}(W_{grnd}, C_{grnd}, M_{base}, ...)\\] \\[F_{base} = k^* W_{grnd} \\quad {\\rm } \\quad F_{base} = k^* M_{base}\\] \\[0 \\leq k^* \\leq 1\\] \\(W_{grnd}\\) ground_water_mm \\(M_{base}\\) ground_potentialBaseflow_mm \\(C_{grnd}\\) ground_capacity_mm, methods need \\(C_{grnd}\\) \\(k^*\\) estimated ratio output density distribution 7 methods:","code":""},{"path":"/reference/baseflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"baseflow — baseflow","text":"","code":"baseflow_GR4J(ground_water_mm, ground_capacity_mm)  baseflow_GR4Jfix(ground_water_mm, ground_capacity_mm, param_baseflow_grf_gamma)  baseflow_SupplyRatio(ground_water_mm, param_baseflow_sur_k)  baseflow_SupplyPow(   ground_water_mm,   param_baseflow_sup_k,   param_baseflow_sup_gamma )  baseflow_MaxPow(   ground_water_mm,   ground_capacity_mm,   ground_potentialBaseflow_mm,   param_baseflow_map_gamma )  baseflow_ThreshPow(   ground_water_mm,   ground_capacity_mm,   ground_potentialBaseflow_mm,   param_baseflow_thp_thresh,   param_baseflow_thp_gamma )  baseflow_Arno(   ground_water_mm,   ground_capacity_mm,   ground_potentialBaseflow_mm,   param_baseflow_arn_thresh,   param_baseflow_arn_k )"},{"path":"/reference/baseflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"baseflow — baseflow","text":"ground_water_mm (mm/m2/TS) water volume groundLy ground_capacity_mm (mm/m2) water storage capacity groundLy param_baseflow_grf_gamma <2, 7> exponential parameter baseflow_GR4Jfix() param_baseflow_sur_k <0.01, 1> coefficient parameter baseflow_SupplyRatio() param_baseflow_sup_k <0.01, 1> coefficient parameter baseflow_SupplyPow() param_baseflow_sup_gamma <0, 1> exponential parameter baseflow_SupplyPow() ground_potentialBaseflow_mm <0.01, 7> (mm/m2/TS) potential baseflow param_baseflow_map_gamma <0.1, 5> exponential parameter baseflow_MaxPow() param_baseflow_thp_thresh <0.1, 0.9> coefficient parameter baseflow_ThreshPow() param_baseflow_thp_gamma <0.1, 5> exponential parameter baseflow_ThreshPow() param_baseflow_arn_thresh <0.1, 0.9> coefficient parameter baseflow_ThreshPow() param_baseflow_arn_k <0.1, 1> exponential parameter baseflow_ThreshPow()","code":""},{"path":"/reference/baseflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"baseflow — baseflow","text":"ground_baseflow_mm (mm/m2/TS)","code":""},{"path":"/reference/baseflow.html","id":"-gr-j-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4J (Perrin et al. 2003) :","title":"baseflow — baseflow","text":"\\[F_{base} = k^* W_{grnd}\\] \\[k^* = 1 - \\left[ 1 + \\left(\\frac{W_{grnd}}{C_{grnd}} \\right)^4 \\right]^{-1/4}\\] \\(k^*\\) estimated ratio","code":""},{"path":"/reference/baseflow.html","id":"-gr-jfix-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4Jfix (Perrin et al. 2003) :","title":"baseflow — baseflow","text":"method based _GR4J use new parameter replace numer 4: \\[F_{base} = k^* W_{grnd}\\] \\[k^* = 1 - \\left[ 1 + \\left(\\frac{W_{grnd}}{C_{grnd}} \\right)^\\gamma \\right]^{-1/\\gamma}\\] \\(\\gamma\\) param_baseflow_grf_gamma","code":""},{"path":"/reference/baseflow.html","id":"-supplyratio-","dir":"Reference","previous_headings":"","what":"_SupplyRatio:","title":"baseflow — baseflow","text":"\\[F_{base} = k W_{grnd}\\] \\(k\\) param_baseflow_sur_k","code":""},{"path":"/reference/baseflow.html","id":"-supplypow-","dir":"Reference","previous_headings":"","what":"_SupplyPow:","title":"baseflow — baseflow","text":"\\[F_{base} = k(W_{grnd})^\\gamma\\] \\(k\\) param_baseflow_sup_k \\(\\gamma\\) param_baseflow_sup_gamma","code":""},{"path":"/reference/baseflow.html","id":"-maxpow-","dir":"Reference","previous_headings":"","what":"_MaxPow:","title":"baseflow — baseflow","text":"\\[F_{base} = M_{base} \\left(\\frac{W_{grnd}}{C_{grnd}} \\right)^\\gamma\\] \\(M_{base}\\) ground_potentialBaseflow_mm \\(\\gamma\\) param_baseflow_map_gamma","code":""},{"path":"/reference/baseflow.html","id":"-threshpow","dir":"Reference","previous_headings":"","what":"_ThreshPow","title":"baseflow — baseflow","text":"method based _MaxPow add one threshold \\(\\phi_b\\): \\[F_{base} = 0, \\quad \\frac{W_{grnd}}{C_{grnd}} < \\phi_b\\] \\[F_{base} = M_{base} \\left(\\frac{\\frac{W_{grnd}}{C_{grnd}} - \\phi_b}{1-\\phi_b} \\right)^\\gamma, \\quad \\frac{W_{grnd}}{C_{grnd}} \\geq \\phi_b\\] \\(\\phi_b\\) param_baseflow_thp_thresh \\(\\gamma\\) param_baseflow_thp_gamma","code":""},{"path":"/reference/baseflow.html","id":"-arno-franchini-and-pacciani-liang-et-al-","dir":"Reference","previous_headings":"","what":"_Arno (Franchini and Pacciani 1991; Liang et al. 1994) :","title":"baseflow — baseflow","text":"method also two cases divided threshold water content \\(\\phi_b\\): \\[F_{base} = k M_{base} \\frac{W_{grnd}}{C_{grnd}}, \\quad \\frac{W_{grnd}}{C_{grnd}} < \\phi_b\\] \\[F_{base} = k M_{base} \\frac{W_{grnd}}{C_{grnd}} + (1-k) M_{base} \\left(\\frac{W_{grnd} - W_s}{C_{grnd} - W_s} \\right)^2, \\quad \\frac{W_{grnd}}{C_{grnd}} \\geq \\phi_b\\] \\[W_s = k C_{grnd}\\] \\(\\phi_b\\) param_baseflow_arn_thresh \\(k\\) param_baseflow_arn_k","code":""},{"path":"/reference/baseflow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"baseflow — baseflow","text":"Craig JR, Tea RD (2022). “Raven User's Developer's Manual (Version 3.5).” Franchini M, Pacciani M (1991). “Comparative Analysis Several Conceptual Rainfall-Runoff Models.” Journal Hydrology, 122(1), 161--219. ISSN 0022-1694, doi: 10.1016/0022-1694(91)90178-K . Liang X, Lettenmaier D, Wood E, Burges S (1994). “Simple Hydrologically Based Model Land Surface Water Energy Fluxes GSMs.” J. Geophys. Res., 99. doi: 10.1029/94JD00483 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 .","code":""},{"path":"/reference/build_modell.html","id":null,"dir":"Reference","previous_headings":"","what":"build model with EDCHM-standard-structure — build_modell","title":"build model with EDCHM-standard-structure — build_modell","text":"Build hydrological model (based c++) EDCHM modules. EDCHM-standard-structure include 15 process:  can set \"NULL\", means without process. stmosSnow input data stmosSnow snowMelt evatransPotential input data intercep evatransLand (evatransActual) intflow confluenSoil (confluenIUH) capirise lateral","code":""},{"path":"/reference/build_modell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"build model with EDCHM-standard-structure — build_modell","text":"","code":"build_modell(process_method, path_model, name_model)"},{"path":"/reference/build_modell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"build model with EDCHM-standard-structure — build_modell","text":"process_method named char vector, like example. must contian 15 processes. can set process \"NULL\", necessary. path_model char path, path space c++ source files name_model char, name model","code":""},{"path":"/reference/build_modell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"build model with EDCHM-standard-structure — build_modell","text":"range parameters","code":""},{"path":"/reference/build_modell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"build model with EDCHM-standard-structure — build_modell","text":"","code":"my_process_method <- c(  atmosSnow = \"atmosSnow_ThresholdT\", evatransPotential = \"NULL\", evatransLand = \"evatransActual_SupplyRatio\", evatransSoil = \"evatransActual_SupplyRatio\", intercep = \"intercep_Full\", snowMelt = \"snowMelt_Kustas\", infilt = \"infilt_AcceptRatio\", percola = \"percola_SupplyRatio\", inteflow = \"inteflow_GR4Jfix\", capirise = \"capirise_HBV\", baseflow = \"baseflow_SupplyRatio\", lateral = \"lateral_GR4Jfix\", confluenLand = \"confluenIUH_Kelly\", confluenSoil = \"confluenIUH_Kelly\", confluenGround = \"confluenIUH_Nash\" )"},{"path":"/reference/cali.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate algorithms — cali","title":"Calibrate algorithms — cali","text":"Calibrate algorithms","code":""},{"path":"/reference/cali.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate algorithms — cali","text":"","code":"cali_DDS(fitness, x_Min, x_Max, x_Init = NA, max_iter = 100, r = 0.2, ...)  cali_UVS(   fitness,   x_Min,   x_Max,   x_Init = NA,   max_n_loop = 10,   n_1_search = 8,   ... )"},{"path":"/reference/cali.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate algorithms — cali","text":"fitness fitness function x_Min, x_Max, x_Init minimal, maximal initial parameter max_iter maximal number iteration r parameter algorithm ... parameters max_n_loop maximal number loops n_1_search maximal number one loop","code":""},{"path":"/reference/cali.html","id":"dds-tolson-and-shoemaker-","dir":"Reference","previous_headings":"","what":"DDS (Tolson and Shoemaker 2007)","title":"Calibrate algorithms — cali","text":"dynamically dimensioned search (DDS) calibration algorithm","code":""},{"path":"/reference/cali.html","id":"uvs","dir":"Reference","previous_headings":"","what":"UVS","title":"Calibrate algorithms — cali","text":"Univariable search algorithmus","code":""},{"path":"/reference/capirise.html","id":null,"dir":"Reference","previous_headings":"","what":"capilarise — capirise","title":"capilarise — capirise","text":"hydrological modeling, capillary rise refers process water drawn upward groundwater (table) soil due force capillary action. conceptual watershed models, capillary rise term often refers process moves water lower higher soil water stores, may also implicitly include lateral groundwater flow processes sloping domain. can calculated water ground layer \\(W_{grnd}\\), can also treated part \\(W_{grnd}\\). many methods describe process. HMs ignore process, perhaps significant situations, process percolation can deal process time. can give function : \\[F_{capi} = f_{capirise}(D_{grnd}, D_{soil})\\] : \\[F_{capi} = f_{capirise}(W_{grnd}, W_{soil}, C_{soil}, ...)\\] \\[F_{capi} \\leq W_{grnd}\\] \\[F_{capi} \\leq C_{soil} - W_{soil}\\] \\(F_{capi}\\) ground_capirise_mm \\(W_{grnd}\\) ground_water_mm \\(W_{soil}\\) water_soil_mm \\(C_{soil}\\) capacity_soil_mm output density distribution 4 methods:","code":""},{"path":"/reference/capirise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"capilarise — capirise","text":"","code":"capirise_HBV(   ground_water_mm,   soil_water_mm,   soil_capacity_mm,   soil_potentialCapirise_mm )  capirise_HBVfix(   ground_water_mm,   soil_water_mm,   soil_capacity_mm,   soil_fieldCapacityPerc_1,   soil_potentialCapirise_mm )  capirise_AcceptRatio(   ground_water_mm,   soil_water_mm,   soil_capacity_mm,   soil_fieldCapacityPerc_1,   param_capirise_acr_k )  capirise_AcceptPow(   ground_water_mm,   soil_water_mm,   soil_capacity_mm,   soil_fieldCapacityPerc_1,   param_capirise_acp_k,   param_capirise_acp_gamma )"},{"path":"/reference/capirise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"capilarise — capirise","text":"ground_water_mm (mm/m2/TS) water volume groundLy soil_water_mm (mm/m2) water volume soilLy soil_capacity_mm (mm/m2) average soil Capacity (maximal storage capacity) soil_potentialCapirise_mm <0.01, 7> (mm/m2/TS) potential capillary rise soil_fieldCapacityPerc_1 <0, 1> relative ratio (\\(\\theta_fc / \\theta^*\\)) water content can drainage gravity param_capirise_acr_k <0.01, 1> coefficient parameter capirise_AcceptRatio() param_capirise_acp_k <0.01, 1> coefficient parameter capirise_AcceptPow() param_capirise_acp_gamma <0.01, 1> exponential parameter capirise_AcceptPow()","code":""},{"path":"/reference/capirise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"capilarise — capirise","text":"ground_capirise_mm (mm/m2/TS) capillary rise","code":""},{"path":"/reference/capirise.html","id":"-hbv-lindstroem-et-al-","dir":"Reference","previous_headings":"","what":"_HBV (Lindstroem et al. 1997) :","title":"capilarise — capirise","text":"\\[F_{capi} = M_{capi} \\left( 1 - \\frac{W_{soil}}{C_{soil}} \\right)\\] \\(M_{capi}\\) soil_potentialCapirise_mm","code":""},{"path":"/reference/capirise.html","id":"-hbvfix-lindstroem-et-al-","dir":"Reference","previous_headings":"","what":"_HBVfix (Lindstroem et al. 1997) :","title":"capilarise — capirise","text":"\\[F_{capi} = M_{capi} \\left( 1 - \\frac{W_{soil}}{k_{fc}C_{soil}} \\right), \\quad W_{soil} < k_{fc}C_{soil}\\] \\(k_{fc}\\) soil_fieldCapacityPerc_1","code":""},{"path":"/reference/capirise.html","id":"-acceptratio-","dir":"Reference","previous_headings":"","what":"_AcceptRatio:","title":"capilarise — capirise","text":"\\[F_{capi} = k \\left( W_{soil} - k_{fc}C_{soil} \\right), \\quad W_{soil} < k_{fc}C_{soil}\\] \\(k\\) param_capirise_acr_k \\(k_{fc}\\) soil_fieldCapacityPerc_1  \\[F_{capi} = k \\left( W_{soil} - k_{fc}C_{soil} \\right)^\\gamma, \\quad W_{soil} < k_{fc}C_{soil}\\] \\(k\\) param_capirise_acp_k \\(\\gamma\\) param_capirise_acp_gamma","code":""},{"path":"/reference/capirise.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"capilarise — capirise","text":"Lindstroem G, Johansson B, Persson M, Gardelin M, Bergstroem S (1997). “Development Test Distributed HBV-96 Hydrological Model.” Journal Hydrology, 201, 272--288. doi: 10.1016/S0022-1694(97)00041-3 .","code":""},{"path":"/reference/confluen.html","id":null,"dir":"Reference","previous_headings":"","what":"confluence — confluen","title":"confluence — confluen","text":"hydrological modeling, routing (named confluen EDCHM) refers process simulating movement water river network drainage system. allows model predict flow water rivers streams. hydrological models, routing typically performed using mathematical algorithms account physical properties river network, geometry, roughness, discharge capacity. parameters govern routing, flow velocity channel roughness, can significant impact accuracy model. confluence calculation function causes water flow gauge point. IUH: IUH (Instant Unit Hydrograph) one watercourse, IUH2S: IUH two water sources, different IUH vector, IUH3S: IUH three water sources, different IUH vector. concept conceptual HM, water flux water flow calculated using confluence process. process calculate water balance, rather time-varying nature water flow. \"Instant Unit Hydrograph\" method effective way deal time-varying flows. first stage, confluenIUH supported. can give function: \\[Q = f_{confluen}(F, u)\\] \\(Q\\) stream flow, still mm/TS m3/TS m3/S \\(F\\) flux river conflen, e.g.land_runoff_mm, soil_interflow_mm ground_baseflow_mm \\(u\\) Instant Unit Hydrograph series","code":""},{"path":"/reference/confluen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"confluence — confluen","text":"","code":"confluen_IUH(confluen_inputWater_mm, confluen_iuh_1)  confluen_IUH2S(   land_runoff_mm,   ground_baseflow_mm,   confluen_iuhLand_1,   confluen_iuhGround_1 )  confluen_IUH3S(   land_runoff_mm,   soil_interflow_mm,   ground_baseflow_mm,   confluen_iuhLand_1,   confluen_iuhSoil_1,   confluen_iuhGround_1 )"},{"path":"/reference/confluen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"confluence — confluen","text":"confluen_inputWater_mm, land_runoff_mm, ground_baseflow_mm (mm/m2) input water volum every routeline confluen_iuh_1, confluen_iuhLand_1, confluen_iuhSoil_1, confluen_iuhGround_1 (vector num, sume() = 1) ratio every timestep, can calculated confluenIUH_GR4J1(), confluenIUH_GR4J2() soil_interflow_mm (mm/m2/TS) subsurface flow directly river","code":""},{"path":"/reference/confluen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"confluence — confluen","text":"confluenced water (mm/m2)","code":""},{"path":"/reference/confluen.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"confluence — confluen","text":"references Rd macro \\insertAllCites help page.","code":""},{"path":"/reference/confluenIUH.html","id":null,"dir":"Reference","previous_headings":"","what":"create IUH (Instant Unit Hydrograph) — confluenIUH","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"process confluenIUH return series portions, means many flux water moment river. sum series always 1. can give function: \\[u = f_{confluenIUH}(t_r, ...)\\] \\(u\\) series portions \\(t_r\\)  confluen_responseTime_TS","code":""},{"path":"/reference/confluenIUH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"","code":"confluenIUH_GR4J1(confluen_responseTime_TS)  confluenIUH_GR4J2(confluen_responseTime_TS)  confluenIUH_Kelly(confluen_responseTime_TS, param_confluen_kel_k)  confluenIUH_Nash(confluen_responseTime_TS, param_confluen_nas_n)  confluenIUH_Clark(confluen_responseTime_TS)"},{"path":"/reference/confluenIUH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"confluen_responseTime_TS (TS) response concentration time every routeline param_confluen_kel_k <1, 4> parameter forconfluenIUH_Kelly() param_confluen_nas_n <1, 8> parameter forconfluenIUH_Nash()","code":""},{"path":"/reference/confluenIUH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"IUH (list num vector)","code":""},{"path":"/reference/confluenIUH.html","id":"-gr-j-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4J1 (Perrin et al. 2003) :","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"\\[u() = S() - S(-1)\\] \\[S() = \\left( \\frac{}{t_r} \\right)^{2.5}, \\quad 0 \\leq \\leq t_r\\] \\(u\\) IUH series \\(\\) index","code":""},{"path":"/reference/confluenIUH.html","id":"-gr-j-perrin-et-al--1","dir":"Reference","previous_headings":"","what":"_GR4J2 (Perrin et al. 2003) :","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"\\[u() = S() - S(-1)\\] \\[S() = 0.5\\left( \\frac{}{t_r} \\right)^{2.5}, \\quad 0 \\leq \\leq t_r\\] \\[S() = 1 - 0.5\\left(2 - \\frac{}{t_r} \\right)^{2.5}, \\quad t_r < < 2t_r\\] \\[S() = 0, \\quad = 2t_r\\] \\(u\\) IUH series \\(\\) index","code":""},{"path":"/reference/confluenIUH.html","id":"-kelly-o-kelly-","dir":"Reference","previous_headings":"","what":"_Kelly (O Kelly 1955) :","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"\\[u() = \\frac{4}{t_r^2} \\left( + k \\left( e^{-/k} \\right) \\right), \\quad \\leq t_r / 2 \\] \\[u() = - \\frac{4}{t_r^2}(- k - t_r) + \\frac{4ke^{-/k}}{t_r^2} (1 - 2 e^{t_r/(2k)}), \\quad t_r / 2 < \\leq t_r \\] \\[u() =  \\frac{4ke^{-/k}}{t_r^2} (1 - 2 e^{t_r/(2k)} +  e^{t_r/k}), \\quad > t_r \\] \\(k\\) param_confluen_kel_k","code":""},{"path":"/reference/confluenIUH.html","id":"-nash-nash-","dir":"Reference","previous_headings":"","what":"_Nash (Nash 1957) :","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"\\[u() = \\frac{1}{t_r\\Gamma(n)} \\left(\\frac{4}{t_r^2}\\right)^{n -1}e^{-/t_r}\\] \\(n\\) param_confluen_nas_n","code":""},{"path":"/reference/confluenIUH.html","id":"-clark-clark-","dir":"Reference","previous_headings":"","what":"_Clark (Clark 1945) :","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"\\[u() = \\frac{1}{t_r} e^{-/t_r} \\] \\(t_r\\) confluen_responseTime_TS","code":""},{"path":"/reference/confluenIUH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"create IUH (Instant Unit Hydrograph) — confluenIUH","text":"Clark CO (1945). “Storage Unit Hydrograph.” Transactions American Society Civil Engineers, 110(1), 1419--1446. doi: 10.1061/TACEAT.0005800 . Nash JE (1957). “Form Instantaneous Unit Hydrograph.” Comptes Rendus et Rapports Assemblee Generale de Toronto, volume III, 114--121. O Kelly JJ (1955). “Employment Unit Hydrographs Determine Flows Irish Arterial Drainage Channels.” Proceedings Institution Civil Engineers, 4(4), 365--412. doi: 10.1680/ipeds.1955.11869 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 .","code":""},{"path":"/reference/EDCHM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A Brief Introduction to EDCHM — EDCHM-package","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"EDCHM package flexible hydrological modeling framework incorporates collection well-known models, GR4J (Perrin et al. 2003) , HBV (Lindstroem et al. 1997) , VIC (Wood et al. 1992) , UBC (Quick Pipes 1977) . model divided clear, well-defined processes individual, self-contained modules. EDCHM allows users easily select combine different processes create new model structures, also choose range methods specific process. provides high degree flexibility customization. EDCHM also allows users divide research catchment sub-basins, grids, hydrological response units (HRUs), providing high degree spatial resolution flexibility. enables users capture simulate water cycle different scales, regional level level individual land units catchment areas.","code":""},{"path":"/reference/EDCHM-package.html","id":"overview-of-this-document","dir":"Reference","previous_headings":"","what":"Overview of this document","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"Due limitations Rd document format, topics EDCHM package documentation ordered alphabetically. help users navigate documentation, auxiliary table provided outlines design EDCHM package. find basic concepts overview hole EDCHM : EDCHM-package: basic concepts describe document all_vari: description variables all_param: description parameters ranges can see 12 process associated 62 methods (modules) : snowMelt: melt snow liquid water intercep: intercept water arrive land surface evatransActual: calculate actual evapotranspiration interception water th soil infilt: water land surface enters soil percola: soil water pores aquifer movement ground water inteflow: runoff soil layer, soilLy directly streams rivers capirise: ground water upward unsaturated soil layer baseflow: portion groundwater, directly streams rivers lateral: water exchange basin  groundwater layer confluenIUH: runoff (runoff, interflow, baseflow) hydrological unit rivers atmosSnow: devide precipitation rainfall snowfall evatransPotential: calculates potential evapotranspiration get information use EDCHM calibrate : build_modell: model building cali: calibrate algorithms","code":""},{"path":"/reference/EDCHM-package.html","id":"layer-and-process","dir":"Reference","previous_headings":"","what":"Layer and Process","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"using EDCHM framework, necessary basic understanding concepts.  EDCHM framework, Layer defined vertical space common characteristics. EDCHM defines five basic layers: atmosLy: stores meteorological data interact hydrological processes (current version). snowLy: layer snow. landLy: consists two sublayers. Sublayer intcpt storage intercepted water, can evaporated. Sublayer land serves temperature layer \"pounded water\" storage capacity. soilLy: defined unsaturated zone land surface water table groundwater. groundLy: defined saturated zone groundwater. EDCHM framework, Process related movement distribution water Earth. occur single layer, occur two layers. defined 9 hydrological processes: snowMelt: melt snow liquid water. intercep: intercept water arrive land surface. evatransActual: calculate actual evapotranspiration interception water th soil. infilt: water land surface enters soil. percola: soil water pores aquifer movement ground water. inteflow: runoff soil layer, soilLy directly streams rivers. capirise: ground water upward unsaturated soil layer. baseflow: portion groundwater, directly streams rivers. lateral: water exchange basin  groundwater layer. confluenIUH: runoff (runoff, interflow, baseflow) hydrological unit rivers, process water volume changed distribution time axis recalculeted IUH (Instantaneous Unit Hydrograph) method. addition, two meteological process: atmosSnow: devide precipitation rainfall snowfall. evatransPotential: calculates potential evapotranspiration. considered meteorological processes can directly obtained meteorological datasets calculated using meteorological data. results processes serve always input data hydrological processes. evatransPotential crucial step determining actual evapotranspiration hydrological models.","code":""},{"path":"/reference/EDCHM-package.html","id":"variable-and-parameter-define","dir":"Reference","previous_headings":"","what":"Variable and Parameter define","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"clear understanding layers processes, can now move basic definitions context modeling. variable names EDCHM framework composed three parts: group-name, physical-name variable-units parts separated underscore _. group-name: name Layer variable located. Sometimes can also Process name time, one important dimension. group-name limited maximum 8 characters must lowercase letters. physical-name: physical variable name, uses camelCase combine multiple words. water volume always simplified water. variable-units: physical units variable simplify program, time-dependent variables use TS time unit, defined model, can 1 hour, 4, 12, 24 hours , time unit included variable name. Additionally, variables assumed homogeneous area, area unit square meter (m2) also included variable name. group_variableName_unit like land_water_mm, atmos_temperature_Cel  following tables list model variables corresponding formula symbols used EDCHM: state variables Capicity layer storage: flux variables potential flux: stream flow m3/TS m3/s also flux dimension: Additional also symbols program-view: \\(D\\): collection data one group layer \\(D_{atms}\\): data atmosLy \\(D_{land}\\): data landLy \\(D_{snow}\\): data snowLy \\(D_{soil}\\): data soilLy \\(D_{grnd}\\): data groundLy \\(D_{lssg}\\): data (one) landLy, snowLy, soilLy groundLy \\(f\\): function modulr e.g. \\(f_{atmosSnow}\\) \\(f_{inflt}\\)","code":""},{"path":"/reference/EDCHM-package.html","id":"parameter-define","dir":"Reference","previous_headings":"","what":"Parameter define","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"parameters defined every function topic naming convention parameters consists four parts: prefix param, process name Parameters make prefix , Process name (sometimes Layer name), abbreviation method three small letters, original parameter name. allows clear consistent naming parameters within program. param_process_mtd_k like param_atmos_ubc_A0FORM, param_infilt_hbv_beta every function topic, range parameters provided format <low, upper>. all_param list also parameters EDCHM.","code":""},{"path":"/reference/EDCHM-package.html","id":"module-define","dir":"Reference","previous_headings":"","what":"Module define","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"last section, ten hydrological two meteorological processes defined conceptual view. Now defined programming view: every process one output variable several input data (data parameters): module defined : specific process different method well-know models. name module composed three parts: process name method name: process_Method like evatransActual_VIC evatransActual_LiangLand following figure shows 12 processes 62 modules defined date.","code":""},{"path":"/reference/EDCHM-package.html","id":"build-a-model-and-calibrate-the-parameters","dir":"Reference","previous_headings":"","what":"Build a model and calibrate the parameters","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"generally way using regular model can described follows: Select model suits research needs acquire necessary software (script). Prepare input data parameters ensure accurate complete. Use observed data calibrate model's parameters. Validate optimized parameters comparing known results models. Apply model optimized parameter sets research. EDCHM, need first build model. process building model intricate nuanced task. requires deep understanding system hydrological modelling ensure every component (process) properly integrated optimized. Identify essential processes involved research. Organize connect processes logical sequence reflects real-world system data-flow. Select appropriate method (module) process, taking account specific requirements constraints research. Assemble model script using chosen modules, compile working model can tested refined. following approach, can create custom-built model tailored specific research needs, can easily adjusted updated new information becomes available. despite complexity building model, EDCHM also offers powerful tools build_modell make process straightforward efficient. EDCHM defined well-organized structure, just need choose necessary process method every process. chosen processes methods, build_modell automatically generate model script, includes input arguments. time also return parameter ranges needed calibration validation. standard structure, twelve processes available selection. However, can also choose use subset processes, six minimal processes. Certainly, limited standard minimal structures building model build_modell. Instead, freedom choose combination processes relevant research. mininal-, snow- standard-structure showed fowling figure:  EDCHM offers also three compiled models EDCHM_mini, EDCHM_snow EDCHM_GR4J. EDCHM_mini EDCHM_snow used mininal- snow-structure random method. EDCHM_GR4J just GR4J EDCHM version, results produced EDCHM_GR4J verified original airGR::RunModel_GR4J() implementation GR4J model, airGR. Overall, build_modell offers flexible customizable approach building models, allowing create model tailored specific research needs requirements. details goto section build_modell. building model, can proceed calibrate parameters. Typically, need evaluate simulated results observations . can use hydroGOF package, offers many goodness--fit (GOF) functions, Nash-Sutcliffe efficiency (NSE) Kling-Gupta efficiency (KGE). still need evaluation function, takes parameters input produces evaluation results output. inputs outputs given calibration algorithm function, decides next set probe parameters based result GOF. evaluation function flexible depends whether parameters lumped distributed, whether need calibrated, whether directly measured calculated categorical data soil class land use. EDCHM offer evaluation function, difficult create one. EDCHM offers two calibration algorithm functions: cali_DDS() (Tolson Shoemaker 2007)  cali_UVS(). cali_DDS() powerful recommended cases. cali_UVS() recommended specific tasks original algorithm. details, see cali section documentation.","code":""},{"path":"/reference/EDCHM-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Brief Introduction to EDCHM — EDCHM-package","text":"Lindstroem G, Johansson B, Persson M, Gardelin M, Bergstroem S (1997). “Development Test Distributed HBV-96 Hydrological Model.” Journal Hydrology, 201, 272--288. doi: 10.1016/S0022-1694(97)00041-3 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 . Quick MC, Pipes (1977). “U.B.C. WATERSHED MODEL / Le Mod攼㸸le Du Bassin Versant U.C.B.” Hydrological Sciences Bulletin, 22(1), 153--161. ISSN 0303-6936, doi: 10.1080/02626667709491701 . Tolson BA, Shoemaker CA (2007). “Dynamically Dimensioned Search Algorithm Computationally Efficient Watershed Model Calibration.” Water Resources Research, 43(1). ISSN 1944-7973, doi: 10.1029/2005WR004723 . Wood EF, Lettenmaier DP, Zartarian VG (1992). “Land-Surface Hydrology Parameterization Subgrid Variability General Circulation Models.” Journal Geophysical Research, 97(D3), 2717. ISSN 0148-0227.","code":""},{"path":"/reference/evatransActual.html","id":null,"dir":"Reference","previous_headings":"","what":"actuall evapotranspiration — evatransActual","title":"actuall evapotranspiration — evatransActual","text":"Actual ET, actual evapotranspiration, measure amount water lost land surface evaporation transpiration plants. concept conceptual HM, actual ET always calculated potential ET \\(E_p\\), evaluates meteorological landuse (vegetation) situations. second point consider water availability land soil. can give function : \\[E_a = f_{evatransActual}(D_{atms}, D_{lssg})\\] : \\[E_a = f_{evatransActual}(E_p, W_{lssg}, ...) = k^* E_p\\] \\(E_a\\) land_evatrans_mm soil_evatrans_mm \\(E_p\\) atmos_potentialEvatrans_mm \\(k^*\\) estimated ratio. different evatransActual methods estimate ratio \\(k^*\\). output density distribution 7 methods:","code":""},{"path":"/reference/evatransActual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"actuall evapotranspiration — evatransActual","text":"","code":"evatransActual_SupplyRatio(   atmos_potentialEvatrans_mm,   water_mm,   capacity_mm,   param_evatrans_sur_k )  evatransActual_SupplyPow(   atmos_potentialEvatrans_mm,   water_mm,   capacity_mm,   param_evatrans_sup_k,   param_evatrans_sup_gamma )  evatransActual_VIC(   atmos_potentialEvatrans_mm,   water_mm,   capacity_mm,   param_evatrans_vic_gamma )  evatransActual_GR4J(atmos_potentialEvatrans_mm, water_mm, capacity_mm)  evatransActual_UBC(   atmos_potentialEvatrans_mm,   water_mm,   capacity_mm,   param_evatrans_ubc_gamma )  evatransActual_LiangLand(   atmos_potentialEvatrans_mm,   water_mm,   capacity_mm,   param_evatrans_lia_gamma )  evatransActual_LiangSoil(   atmos_potentialEvatrans_mm,   water_mm,   capacity_mm,   param_evatrans_lia_B )"},{"path":"/reference/evatransActual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"actuall evapotranspiration — evatransActual","text":"atmos_potentialEvatrans_mm (mm/m2/TS) potential / reference evapotranspiration water_mm (mm/m2/TS) water volume soilLy, groundLy intercept landLy, soil_water_mm, ground_water_mm land_interceptWater_mm capacity_mm (mm/m2) water storage capacity soilLy, groundLy intercept landLy, soil_capacity_mm, ground_capacity_mm orland_interceptCapacity_mm param_evatrans_sur_k <0.1, 1> parameter evatransActual_SupplyRatio(), ratio potential ET, estimated actually ET param_evatrans_sup_k <0.1, 1> parameter evatransActual_SupplyPow(), ratio method param_evatrans_sup_gamma <1, 5> parameter evatransActual_SupplyPow(), exponent method param_evatrans_vic_gamma <0.2, 5> parameter evatransActual_VIC() param_evatrans_ubc_gamma <0.5, 2> parameter evatransActual_UBC() param_evatrans_lia_gamma <0.4, 1> parameter evatransActual_LiangLand() param_evatrans_lia_B <0.01, 3> parameter evatransActual_LiangSoil()","code":""},{"path":"/reference/evatransActual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"actuall evapotranspiration — evatransActual","text":"actually ET (mm/m2/TS) evaporation interception (landLy), land_evatrans_mm transpiration root evaporation soil (soilLy), soil_evatrans_mm","code":""},{"path":"/reference/evatransActual.html","id":"-supplyratio-","dir":"Reference","previous_headings":"","what":"_SupplyRatio:","title":"actuall evapotranspiration — evatransActual","text":"water content (ratio maximal capacity) considered th main factors ratio \\(k^*\\). \\[k^* = k  \\frac{W}{C}\\] \\(W\\) water volume (mm/m2/TS), water_mm, land_interceptWater_mm, soil_water_mm \\(C\\) water capacity (mm/m2), capacity_mm, land_interceptCapacity_mm, soil_capacity_mm \\(k\\) param_evatrans_sur_k","code":""},{"path":"/reference/evatransActual.html","id":"-supplypow-","dir":"Reference","previous_headings":"","what":"_SupplyPow:","title":"actuall evapotranspiration — evatransActual","text":"water content (ratio maximal capacity) considered th main factors ratio \\(k^*\\). \\[k^* = k  \\left(\\frac{W}{C}\\right)^\\gamma\\] \\(k\\) param_evatrans_sup_k \\(\\gamma\\) param_evatrans_sup_gamma","code":""},{"path":"/reference/evatransActual.html","id":"-vic-wood-et-al-","dir":"Reference","previous_headings":"","what":"_VIC (Wood et al. 1992) :","title":"actuall evapotranspiration — evatransActual","text":"method similar evatransActual_SupplyPow(), estimate water content storage. \\[k^* = 1-\\left(1-\\frac{W}{C}\\right)^{\\gamma}\\] \\(\\gamma\\) param_evatrans_vic_gamma","code":""},{"path":"/reference/evatransActual.html","id":"-gr-j-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4J (Perrin et al. 2003) :","title":"actuall evapotranspiration — evatransActual","text":"little different method, estimate ratio \\(f\\), rather dieectly equation potential ET water content. need parameter. \\[E_a = \\frac{W\\left(2-\\frac{W}{C}\\right)\\tanh \\left(\\frac{E_p}{C}\\right)}{1 + \\left(1-\\frac{W}{C}\\right)\\tanh \\left(\\frac{E_p}{C}\\right)}\\]","code":""},{"path":"/reference/evatransActual.html","id":"-ubc-quick-and-pipes-","dir":"Reference","previous_headings":"","what":"_UBC (Quick and Pipes 1977) :","title":"actuall evapotranspiration — evatransActual","text":"estimates water content storage. (little different original, parameter P0AGEN replaced \\(\\frac{C}{\\gamma}\\).) \\[k^* = 10^{\\gamma \\frac{W-C}{C}}\\] \\(\\gamma\\) param_evatrans_ubc_gamma","code":""},{"path":"/reference/evatransActual.html","id":"-liangland-liang-et-al-","dir":"Reference","previous_headings":"","what":"_LiangLand (Liang et al. 1994) :","title":"actuall evapotranspiration — evatransActual","text":"also similar method like evatransActual_SupplyPow(), estimate supply ability agian, whwn water still enough. \\[E_a^* = \\left(\\frac{W}{C}\\right)^\\gamma E_p\\] \\[E_a = \\min \\left(1, \\frac{W}{E_a^*}\\right) E_a^*\\] \\(E_l^*\\) first estimated actuall ET \\(E_l\\) actuall ET land, land_evatrans_mm \\(\\gamma\\) param_evatrans_lia_gamma","code":""},{"path":"/reference/evatransActual.html","id":"-liangsoil-liang-et-al-","dir":"Reference","previous_headings":"","what":"_LiangSoil (Liang et al. 1994) :","title":"actuall evapotranspiration — evatransActual","text":"estimates water content storage. (little different original, parameter P0AGEN replaced \\(\\frac{C}{\\gamma}\\).) \\[k^* = \\int_{0}^{A_{s}} {\\rm d} + \\int_{A_{s}}^{1} \\frac{i_{0}}{i_{m} [1-(1-)^{1 / B} ]} {\\rm d} \\] \\(B\\) param_evatrans_lia_B \\(\\) fraction area","code":""},{"path":"/reference/evatransActual.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"actuall evapotranspiration — evatransActual","text":"Liang X, Lettenmaier D, Wood E, Burges S (1994). “Simple Hydrologically Based Model Land Surface Water Energy Fluxes GSMs.” J. Geophys. Res., 99. doi: 10.1029/94JD00483 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 . Quick MC, Pipes (1977). “U.B.C. WATERSHED MODEL / Le Mod攼㸸le Du Bassin Versant U.C.B.” Hydrological Sciences Bulletin, 22(1), 153--161. ISSN 0303-6936, doi: 10.1080/02626667709491701 . Wood EF, Lettenmaier DP, Zartarian VG (1992). “Land-Surface Hydrology Parameterization Subgrid Variability General Circulation Models.” Journal Geophysical Research, 97(D3), 2717. ISSN 0148-0227.","code":""},{"path":"/reference/evatransPotential.html","id":null,"dir":"Reference","previous_headings":"","what":"potential evapotranspiration — evatransPotential","title":"potential evapotranspiration — evatransPotential","text":"concept potential evapotranspiration (ET) estimates ability water lost soil vegetation area due evaporation transpiration. assumes always enough water ET area meet demand evapotranspiration. However, characteristics ET area, whether covered vegetation bare soil, can affect amount evapotranspiration occurs. order accurately estimate potential ET, need consider characteristics. may always access necessary information effective methods . cases, can use simplified method known reference ET. method defines ET area using certain fixed characteristics, provided evatransPotential_FAO56() function. situation, need provide factors account differences actual ET area reference ET area.","code":""},{"path":"/reference/evatransPotential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"potential evapotranspiration — evatransPotential","text":"","code":"evatransPotential_TurcWendling(   atmos_temperature_Cel,   atmos_solarRadiat_MJ,   time_step_h,   param_evatrans_tur_k )  evatransPotential_Linacre(   time_dayOfYear_,   atmos_temperature_Cel,   atmos_relativeHumidity_1,   land_latitude_Degree,   land_elevation_m,   land_albedo_1 )  evatransPotential_FAO56(   time_dayOfYear_,   atmos_temperature_Cel,   atmos_vaporPress_hPa,   atmos_saturatVaporPress_hPa,   atmos_netRadiat_MJ,   atmos_windSpeed2m_m_s,   land_latitude_Degree,   land_elevation_m )"},{"path":"/reference/evatransPotential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"potential evapotranspiration — evatransPotential","text":"atmos_temperature_Cel (Cel) average air temperature time phase atmos_solarRadiat_MJ (MJ/m2/TS) solar radiation actually reaches earths surface time_step_h <1, 24> (h) time step hour param_evatrans_tur_k <0.6, 1> parameter evatransPotential_TurcWendling(), higher value closer sea time_dayOfYear_ <1, 366> (d) number day year 1 (1 January) 365 366 (31 December) atmos_relativeHumidity_1 (0, 1) relative humidity land_latitude_Degree (degree) average latitude land_elevation_m (m) average elevation land_albedo_1 <0, 1> albedo region atmos_vaporPress_hPa (hPa) actual vapour pressure, can calculated atmos_VaporPress() atmos_saturatVaporPress_hPa (hPa) saturation vapour pressure atmos_temperature_Cel, can calculated atmos_SaturatVaporPress() atmos_netRadiat_MJ (MJ/m2/TS) balance energy absorbed, reflected emitted earths surface difference incoming net shortwave (Rns) net outgoing longwave (Rnl) radiation atmos_windSpeed2m_m_s (m/s) wind speed 2 m ground surface","code":""},{"path":"/reference/evatransPotential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"potential evapotranspiration — evatransPotential","text":"potential evapotranspiration (mm/m2)","code":""},{"path":"/reference/evatransPotential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"potential evapotranspiration — evatransPotential","text":"_TurcWendling (WENDLING et al. 1991) : consider radiation temperature main factors. \\[E_p = \\frac{(100 R_s + 3.875 t_h k)\\cdot(T + 22)}{150 (T + 123)}\\] \\(E_p\\) potential ET, atmos_potentialEvatrans_mm \\(R_s\\) solar radiation, atmos_solarRadiat_MJ \\(t_h\\) time step hour, time_step_h \\(T\\) average air temperature, atmos_temperature_Cel \\(k\\) param_evatrans_tur_k _Linacre (Linacre 1977) : consider temperature main factors. \\[E_p = \\frac{\\frac{100(0.75 - \\alpha)(T + 0.006 z)}{100 - \\phi} + 15(T - T_d)}{80 - T}\\] \\[T_d = T - 20 (1-H_R)\\] \\(\\alpha\\) albedo, land_albedo_1 \\(z\\) elevation, land_elevation_m \\(T_d\\) dewpoint temperature, \\(H_R\\) relative humidity, atmos_relativeHumidity_1 _FAO56 (Allen et al. 1998) : consider radiation temperature also variable like wind speed main factors. \\[E_p =\\frac{0.408 \\Delta\\left(R_n - G\\right)+\\gamma \\frac{900}{T+273} {u}_{2}\\left({e}_{{s}}-{e}_{{}}\\right)}{\\Delta+\\gamma\\left(1+0.34 {u}_{2}\\right)}\\] \\(\\Delta\\) slope vapour pressure curve (kPa °C-1) \\(R_n\\) net radiation, atmos_netRadiat_MJ \\(G\\) soil heat flux density \\(u_2\\) wind speed 2 m height, atmos_windSpeed2m_m_s \\(e_s\\) saturation vapour pressure, atmos_saturatVaporPress_hPa \\(e_a\\) actual vapour pressure, atmos_vaporPress_hPa \\(\\gamma\\) psychrometric constant","code":""},{"path":"/reference/evatransPotential.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"potential evapotranspiration — evatransPotential","text":"Allen RG, Pereira LS, Raes D, Smith M (1998). “Crop Evapotranspiration. Guidelines Computing Crop Water Requirements.” FAO Irrigation Drainage Paper (FAO). Linacre ET (1977). “Simple Formula Estimating Evaporation Rates Various Climates, Using Temperature Data Alone.” Agricultural Meteorology, 18(6), 409--424. ISSN 0002-1571, doi: 10.1016/0002-1571(77)90007-3 . WENDLING U, SCHELLIN H, THOM挼㸴 M (1991). “Bereitstellung von T攼㸴glichen Informationen Zum Wasserhaushalt Des Bodens F昼㹣r Die Zwecke Der Agrarmeteorologischen Beratung.” Bereitstellung von t攼㸴glichen Informationen zum Wasserhaushalt des Bodens f昼㹣r die Zwecke der agrarmeteorologischen Beratung, 41(6), 468--475. ISSN 0084-5361.","code":""},{"path":"/reference/infilt.html","id":null,"dir":"Reference","previous_headings":"","what":"infiltration — infilt","title":"infiltration — infilt","text":"hydrological modeling, infiltration refers process water precipitation snowmelt irrigation enters soil (Maidment 1993) . concept conceptual HM, flux infiltration always calculated amount water land \\(W_{land}\\), can precipitation, precipitation interception, precipitation snowmelt, among others. second point consider water acceptability soil layer (\\(C_{soil} - W_{soil}\\)). can give function : \\[F_{iflt} = f_{infilt}(D_{land}, D_{soil})\\] : \\[F_{iflt} = f_{infilt}(W_{land}, W_{soil}, C_{soil}, ...)\\] methods tread infiltartion part th pounded water also: \\[F_{iflt} = k^* W_{land}\\] \\(F_{iflt}\\) infilt_mm \\(W_{land}\\) land_water_mm \\(W_{soil}\\) soil_water_mm \\(C_{soil}\\) soil_capacity_mm \\(k^*\\) estimated ratio. output density distribution 9 methods:","code":""},{"path":"/reference/infilt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"infiltration — infilt","text":"","code":"infilt_GR4J(land_water_mm, soil_water_mm, soil_capacity_mm)  infilt_UBC(   land_water_mm,   land_impermeableFrac_1,   soil_water_mm,   soil_capacity_mm,   param_infilt_ubc_P0AGEN )  infilt_SupplyRatio(   land_water_mm,   soil_water_mm,   soil_capacity_mm,   param_infilt_sur_k )  infilt_AcceptRatio(   land_water_mm,   soil_water_mm,   soil_capacity_mm,   param_infilt_acr_k )  infilt_SupplyPow(   land_water_mm,   soil_water_mm,   soil_capacity_mm,   param_infilt_sup_k,   param_infilt_sup_gamma )  infilt_AcceptPow(   land_water_mm,   soil_water_mm,   soil_capacity_mm,   param_infilt_acp_k,   param_infilt_acp_gamma )  infilt_HBV(   land_water_mm,   soil_water_mm,   soil_capacity_mm,   param_infilt_hbv_beta )  infilt_XAJ(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_xaj_B)  infilt_VIC(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_vic_B)"},{"path":"/reference/infilt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"infiltration — infilt","text":"land_water_mm (mm/m2) pounded water volume landLy limit, different land_interceptWater_mm soil_water_mm (mm/m2) water volume soilLy soil_capacity_mm (mm/m2) average soil Capacity (maximal storage capacity) land_impermeableFrac_1 <0, 1> maximum impermeable fraction th soil fully saturated param_infilt_ubc_P0AGEN <0.1, 4> coefficient parameter infilt_UBC() param_infilt_sur_k <0.01, 1> coefficient parameter infilt_SupplyRatio() param_infilt_acr_k <0.01, 1> coefficient parameter infilt_AcceptRatio() param_infilt_sup_k <0.01, 1> coefficient parameter infilt_SupplyPow() param_infilt_sup_gamma <0, 1> parameters infilt_SupplyPow() param_infilt_acp_k <0.01, 1> coefficient parameter infilt_AcceptPow() param_infilt_acp_gamma <0.001, 5> parameters infilt_AcceptPow() param_infilt_hbv_beta <0.001, 5> parameters infilt_HBV() param_infilt_xaj_B <0.01, 3> parameters infilt_XAJ() param_infilt_vic_B <0.01, 3> parameters infilt_VIC()","code":""},{"path":"/reference/infilt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"infiltration — infilt","text":"flux infiltration land surface soil layer infilt_mm (mm/m2)","code":""},{"path":"/reference/infilt.html","id":"-gr-j-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4J (Perrin et al. 2003) :","title":"infiltration — infilt","text":"\\[F_{iflt}=\\frac{C_{soil}\\left(1-\\left(\\frac{W_{soil}}{C_{soil}}\\right)^{2}\\right) \\tanh \\left(\\frac{W_{land}}{C_{soil}}\\right)}{1+\\frac{W_{soil}}{C_{soil}} \\tanh \\left(\\frac{W_{land}}{C_{soil}}\\right)}\\]","code":""},{"path":"/reference/infilt.html","id":"-ubc-quick-and-pipes-","dir":"Reference","previous_headings":"","what":"_UBC (Quick and Pipes 1977) :","title":"infiltration — infilt","text":"estimate ratio \\(k^*\\) : \\[k^* = p_{imper} 10^{\\frac{W_{soil}-C_{soil}}{p_{AGEN}}}\\] \\(p_{imper}\\) land_impermeableFrac_1 \\(p_{AGEN}\\) param_infilt_ubc_P0AGEN","code":""},{"path":"/reference/infilt.html","id":"-supplyratio-","dir":"Reference","previous_headings":"","what":"_SupplyRatio:","title":"infiltration — infilt","text":"simple method, estimate pounded water: \\[k^* = k\\] \\(k\\) param_infilt_sur_k","code":""},{"path":"/reference/infilt.html","id":"-acceptratio-","dir":"Reference","previous_headings":"","what":"_AcceptRatio:","title":"infiltration — infilt","text":"\\[F_{iflt} = k (C_{soil} - W_{soil})\\] \\(k\\) param_infilt_acr_k","code":""},{"path":"/reference/infilt.html","id":"-supplypow-","dir":"Reference","previous_headings":"","what":"_SupplyPow:","title":"infiltration — infilt","text":"simple method, estimate pounded water: \\[F_{iflt} = kW_{land}^{\\gamma}\\] \\(k\\) param_infilt_sup_k \\(\\gamma\\) param_infilt_sup_gamma","code":""},{"path":"/reference/infilt.html","id":"-acceptpow-","dir":"Reference","previous_headings":"","what":"_AcceptPow:","title":"infiltration — infilt","text":"\\[F_{iflt} = k \\left(\\frac{C_{soil} - W_{soil}}{C_{soil}} \\right)^{\\gamma}\\] \\(k\\) param_infilt_acp_k \\(\\gamma\\) param_infilt_acp_gamma","code":""},{"path":"/reference/infilt.html","id":"-hbv-lindstroem-et-al-","dir":"Reference","previous_headings":"","what":"_HBV (Lindstroem et al. 1997) :","title":"infiltration — infilt","text":"estimate ratio \\(k^*\\) : \\[k^* = 1-\\left(\\frac{W_{soil}}{C_{soil}}\\right)^{\\beta}\\] \\(\\beta\\) param_infilt_hbv_beta","code":""},{"path":"/reference/infilt.html","id":"-xaj-zhao-","dir":"Reference","previous_headings":"","what":"_XAJ (Zhao 1992) :","title":"infiltration — infilt","text":"\\[F_{iflt} = MM  \\frac{\\left( \\frac{MM - AU}{MM} \\right)^{B+1} - \\left( \\frac{MM - AU - W_{land}}{MM} \\right)^{B+1}}{B+1}\\] \\[AU = MM - \\left( \\frac{(1 - W_{soil})(B+1)}{MM} \\right)^{1 / B - 1}  \\] \\[MM = C_{soil}(B+1)  \\] \\(B\\) param_infilt_xaj_B","code":""},{"path":"/reference/infilt.html","id":"-vic-wood-et-al-","dir":"Reference","previous_headings":"","what":"_VIC (Wood et al. 1992) :","title":"infiltration — infilt","text":"\\[F_{infilt} = \\int_{i_{0}}^{i_{0}+P} () {\\rm d} \\] \\[= C_{soil}(B+1) \\left[ 1 - (1-)^{1/B} \\right]\\] \\(B\\) param_infilt_vic_B","code":""},{"path":"/reference/infilt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"infiltration — infilt","text":"Lindstroem G, Johansson B, Persson M, Gardelin M, Bergstroem S (1997). “Development Test Distributed HBV-96 Hydrological Model.” Journal Hydrology, 201, 272--288. doi: 10.1016/S0022-1694(97)00041-3 . Maidment DR (1993). Handbook Hydrology, volume 31. McGraw-Hill Education Ltd. ISBN 0-07-039735-5. Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 . Quick MC, Pipes (1977). “U.B.C. WATERSHED MODEL / Le Mod攼㸸le Du Bassin Versant U.C.B.” Hydrological Sciences Bulletin, 22(1), 153--161. ISSN 0303-6936, doi: 10.1080/02626667709491701 . Wood EF, Lettenmaier DP, Zartarian VG (1992). “Land-Surface Hydrology Parameterization Subgrid Variability General Circulation Models.” Journal Geophysical Research, 97(D3), 2717. ISSN 0148-0227. Zhao R (1992). “Xinanjiang Model Applied China.” Journal Hydrology, 135(1), 371--381. ISSN 0022-1694, doi: 10.1016/0022-1694(92)90096-E .","code":""},{"path":"/reference/inteflow.html","id":null,"dir":"Reference","previous_headings":"","what":"interflow — inteflow","title":"interflow — inteflow","text":"hydrological modeling, interflow refers movement water transported horizontally soil aquifer. Like baseflow, impact RUs (response units) route river ignored. can calculated water soil layer \\(W_{soil}\\), can also tread part \\(W_{soil}\\). can give function : \\[F_{itfl} = f_{inteflow}(D_{grnd}, D_{soil})\\] : \\[F_{itfl} = f_{inteflow}(W_{soil}, C_{soil}, ...) = k^* W_{soil}\\] \\[F_{itfl} \\leq W_{soil}\\] \\(F_{itfl}\\) soil_inteflow_mm \\(W_{soil}\\) water_soil_mm \\(C_{soil}\\) capacity_soil_mm \\(k^*\\) estimated ratio output density distribution 8 methods:","code":""},{"path":"/reference/inteflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interflow — inteflow","text":"","code":"inteflow_GR4Jfix(   soil_water_mm,   soil_capacity_mm,   param_inteflow_grf_k,   param_inteflow_grf_gamma )  inteflow_MaxPow(   soil_water_mm,   soil_capacity_mm,   soil_potentialInteflow_mm,   param_inteflow_map_gamma )  inteflow_ThreshPow(   soil_water_mm,   soil_capacity_mm,   soil_potentialInteflow_mm,   param_inteflow_thp_thresh,   param_inteflow_thp_gamma )  inteflow_Arno(   soil_water_mm,   soil_capacity_mm,   soil_potentialInteflow_mm,   param_inteflow_arn_thresh,   param_inteflow_arn_k )  inteflow_BevenWood(   soil_water_mm,   soil_capacity_mm,   soil_fieldCapacityPerc_1,   soil_potentialInteflow_mm )  inteflow_SupplyPow0(   soil_water_mm,   param_inteflow_sp0_k,   param_inteflow_sp0_gamma )  inteflow_SupplyPow(   soil_water_mm,   soil_capacity_mm,   param_inteflow_sup_k,   param_inteflow_sup_gamma )  inteflow_SupplyRatio(soil_water_mm, param_inteflow_sur_k)"},{"path":"/reference/inteflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interflow — inteflow","text":"soil_water_mm (mm/m2) water volume soilLy soil_capacity_mm (mm/m2) average soil Capacity (maximal storage capacity) param_inteflow_grf_k <0.01, 1> coefficient parameter inteflow_GR4Jfix() param_inteflow_grf_gamma <2, 7> exponential parameter baseflow_GR4Jfix() soil_potentialInteflow_mm <0.01, 7> (mm/m2/TS) potential interflow param_inteflow_map_gamma <0.1, 5> exponential parameter inteflow_MaxPow() param_inteflow_thp_thresh <0.1, 0.9> coefficient parameter inteflow_ThreshPow() param_inteflow_thp_gamma <0.1, 5> exponential parameter inteflow_ThreshPow() param_inteflow_arn_thresh <0.1, 0.9> coefficient parameter inteflow_ThreshPow() param_inteflow_arn_k <0.1, 1> exponential parameter inteflow_ThreshPow() soil_fieldCapacityPerc_1 <0, 1> relative ratio (\\(\\theta_fc / \\theta^*\\)) water content can drainage gravity param_inteflow_sp0_k <0.01, 1> coefficient parameter inteflow_SupplyPow0() param_inteflow_sp0_gamma <0, 1> exponential parameter inteflow_SupplyPow0() param_inteflow_sup_k <0.01, 1> coefficient parameter inteflow_SupplyPow() param_inteflow_sup_gamma <0, 7> parameter inteflow_SupplyPow() param_inteflow_sur_k <0.01, 1> coefficient parameter inteflow_SupplyRatio()","code":""},{"path":"/reference/inteflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interflow — inteflow","text":"inteflow_mm (mm/m2)","code":""},{"path":"/reference/inteflow.html","id":"-gr-jfix-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4Jfix (Perrin et al. 2003) :","title":"interflow — inteflow","text":"\\[k^* = 1 - \\left[ 1 + \\left(k \\frac{W_{soil}}{C_{soil}} \\right)^\\gamma \\right]^{-1/\\gamma}\\] \\(k\\) param_inteflow_grf_k \\(\\gamma\\) param_baseflow_grf_gamma","code":""},{"path":"/reference/inteflow.html","id":"-maxpow-","dir":"Reference","previous_headings":"","what":"_MaxPow:","title":"interflow — inteflow","text":"\\[F_{itfl} = M_{itfl} \\left(\\frac{W_{soil}}{C_{soil}} \\right)^\\gamma\\] \\(M_{itfl}\\) soil_potentialInteflow_mm \\(\\gamma\\) param_inteflow_map_gamma","code":""},{"path":"/reference/inteflow.html","id":"-threshpow","dir":"Reference","previous_headings":"","what":"_ThreshPow","title":"interflow — inteflow","text":"based _MaxPow add one threshold \\(\\phi_b\\): \\[F_{itfl} = 0, \\quad \\frac{W_{soil}}{C_{soil}} < \\phi_b\\] \\[F_{itfl} = M_{itfl} \\left(\\frac{\\frac{W_{soil}}{C_{soil}} - \\phi_b}{1-\\phi_b} \\right)^\\gamma, \\quad \\frac{W_{soil}}{C_{soil}} \\geq \\phi_b\\] \\(\\phi_b\\) param_inteflow_thp_thresh \\(\\gamma\\) param_inteflow_thp_gamma","code":""},{"path":"/reference/inteflow.html","id":"-arno-franchini-and-pacciani-liang-et-al-","dir":"Reference","previous_headings":"","what":"_Arno (Franchini and Pacciani 1991; Liang et al. 1994)","title":"interflow — inteflow","text":"also two cases divided threshold water content \\(\\phi_b\\): (method actually original method, analogy inteflow_Arno) \\[F_{itfl} = k M_{itfl} \\frac{W_{soil}}{C_{soil}}, \\quad \\frac{W_{soil}}{C_{soil}} < \\phi_b\\] \\[F_{itfl} = k M_{itfl} \\frac{W_{soil}}{C_{soil}} + (1-k) M_{itfl} \\left(\\frac{W_{soil} - W_s}{C_{soil} - W_s} \\right)^2, \\quad \\frac{W_{soil}}{C_{soil}} \\geq \\phi_b\\] \\[W_s = k C_{soil}\\] \\(\\phi_b\\) param_inteflow_arn_thresh \\(k\\) param_inteflow_arn_k","code":""},{"path":"/reference/inteflow.html","id":"-bevenwood-beven-and-wood-beven-et-al-","dir":"Reference","previous_headings":"","what":"_BevenWood (Beven and Wood 1983; Beven et al. 1995) :","title":"interflow — inteflow","text":"\\[k =  \\frac{W_{soil}}{C_{soil} - W_{soil}} \\quad {\\rm } \\quad k \\leq 1\\] \\[F_{itfl} = k M_{itfl}\\] \\(k_{fc}\\) soil_fieldCapacityPerc_1 \\(\\gamma\\) param_inteflow_sup_gamma","code":""},{"path":"/reference/inteflow.html","id":"-supplypow-","dir":"Reference","previous_headings":"","what":"_SupplyPow0:","title":"interflow — inteflow","text":"\\[F_{base} = k(W_{grnd})^\\gamma\\] \\(k\\) param_inteflow_sup_k \\(\\gamma\\) param_inteflow_sup_gamma","code":""},{"path":"/reference/inteflow.html","id":"-supplypow--1","dir":"Reference","previous_headings":"","what":"_SupplyPow:","title":"interflow — inteflow","text":"\\[k^* = k \\left(\\frac{W_{soil}}{C_{soil}} \\right)^\\gamma\\] \\(k\\) param_inteflow_sup_k \\(\\gamma\\) param_inteflow_sup_gamma","code":""},{"path":"/reference/inteflow.html","id":"-supplyratio-","dir":"Reference","previous_headings":"","what":"_SupplyRatio:","title":"interflow — inteflow","text":"\\[k^* = k\\] \\(k\\) param_inteflow_sur_k","code":""},{"path":"/reference/inteflow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"interflow — inteflow","text":"Beven K, Lamb R, Quinn P, Romanowicz R, Freer J (1995). “TOPMODEL.” Computer models watershed hydrology., 627--668. Beven K, Wood EF (1983). “Catchment Geomorphology Dynamics Runoff Contributing Areas.” Journal Hydrology, 65(1), 139--158. ISSN 0022-1694, doi: 10.1016/0022-1694(83)90214-7 . Franchini M, Pacciani M (1991). “Comparative Analysis Several Conceptual Rainfall-Runoff Models.” Journal Hydrology, 122(1), 161--219. ISSN 0022-1694, doi: 10.1016/0022-1694(91)90178-K . Liang X, Lettenmaier D, Wood E, Burges S (1994). “Simple Hydrologically Based Model Land Surface Water Energy Fluxes GSMs.” J. Geophys. Res., 99. doi: 10.1029/94JD00483 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 .","code":""},{"path":"/reference/intercep.html","id":null,"dir":"Reference","previous_headings":"","what":"interception water from land go into the soil. — intercep","title":"interception water from land go into the soil. — intercep","text":"hydrological modeling, interception refers process water precipitation temporarily retained surfaces vegetation, leaves branches, returned atmosphere evaporation drip. concept conceptional HM, interception simply calculated maximal interception land. interception water also go land, evaporated. maximal Interception canopy maybe difficult estimate process really simple also many method describe .","code":""},{"path":"/reference/intercep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interception water from land go into the soil. — intercep","text":"","code":"intercep_Full(   atmos_precipitation_mm,   land_interceptWater_mm,   land_interceptCapacity_mm )"},{"path":"/reference/intercep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interception water from land go into the soil. — intercep","text":"atmos_precipitation_mm (mm/m2/TS) precipitaion volum land_interceptWater_mm (mm/m2) initial water volume can intercepted land_interceptCapacity_mm (mm/m2) average intercept Capacity (maximal storage capacity)","code":""},{"path":"/reference/intercep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interception water from land go into the soil. — intercep","text":"intercept_water_mm (mm/m2) intercepted water timestep","code":""},{"path":"/reference/intercep.html","id":"-full-","dir":"Reference","previous_headings":"","what":"_Full :","title":"interception water from land go into the soil. — intercep","text":"consider radiation temperature main factors. \\[F_{itcp} = C_{icpt} - W_{icpt}\\] \\(F_{icp}\\) intercept_water_mm \\(C_{icpt}\\) land_intercepCapaciy_mm \\(W_{icpt}\\) land_intercepWater_mm","code":""},{"path":"/reference/lateral.html","id":null,"dir":"Reference","previous_headings":"","what":"lateral flux — lateral","title":"lateral flux — lateral","text":"hydrological modeling, lateral flow refers process water flows horizontally soil aquifer, rather vertically. typically represented loss term water balance equation, also named groundwater exchange (e.g. GR4J (Perrin et al. 2003) ). flux lateral exchange always calculated () water ground layer \\(W_{grnd}\\). Unlike fluxes, lateral exchange can positive negative, positive indicating supply regions negative indicating distribution regions. process flexible must carefully use , can easily destroy waster balance research catchment. \\[F_{ltrl} = f_{lateral}(D_{grnd})\\] : \\[F_{ltrl} = f_{lateral}(W_{grnd}, C_{grnd}, ...)\\] \\(W_{grnd}\\) ground_water_mm \\(C_{grnd}\\) ground_capacity_mm, methods need \\(C_{grnd}\\) output density distribution 6 methods:","code":""},{"path":"/reference/lateral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lateral flux — lateral","text":"","code":"lateral_SupplyPow(   ground_water_mm,   ground_capacity_mm,   param_lateral_sup_k,   param_lateral_sup_gamma )  lateral_SupplyRatio(ground_water_mm, param_lateral_sur_k)  lateral_GR4J(ground_water_mm, ground_capacity_mm, ground_potentialLateral_mm)  lateral_GR4Jfix(   ground_water_mm,   ground_capacity_mm,   ground_potentialLateral_mm,   param_lateral_grf_gamma )  lateral_ThreshPow(   ground_water_mm,   ground_capacity_mm,   ground_potentialLateral_mm,   param_lateral_thp_thresh,   param_lateral_thp_gamma )  lateral_Arno(   ground_water_mm,   ground_capacity_mm,   ground_potentialLateral_mm,   param_lateral_arn_thresh,   param_lateral_arn_k )"},{"path":"/reference/lateral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lateral flux — lateral","text":"ground_water_mm (mm/m2/TS) water volume groundLy ground_capacity_mm (mm/m2) water storage capacity groundLy param_lateral_sup_k <-1, 1> coefficient parameter lateral_SupplyPow() param_lateral_sup_gamma <0.01, 5> parameters lateral_SupplyPow() param_lateral_sur_k <-2, 1> coefficient parameter lateral_SupplyRatio() ground_potentialLateral_mm <-7, 7> (mm/m2/TS) potential lateral flow param_lateral_grf_gamma <0.01, 5> parameter lateral_GR4Jfix() param_lateral_thp_thresh <0.1, 0.9> coefficient parameter lateral_ThreshPow() param_lateral_thp_gamma <0.1, 5> exponential parameter lateral_ThreshPow() param_lateral_arn_thresh <0.1, 0.9> coefficient parameter lateral_ThreshPow() param_lateral_arn_k <0.1, 1> exponential parameter lateral_ThreshPow()","code":""},{"path":"/reference/lateral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lateral flux — lateral","text":"lateral_mm (mm/m2)","code":""},{"path":"/reference/lateral.html","id":"-supplypow-","dir":"Reference","previous_headings":"","what":"_SupplyPow:","title":"lateral flux — lateral","text":"\\[F_{ltrl} = k \\left( \\frac{W_{grnd}}{C_{grnd}} \\right)^\\gamma  W_{grnd}\\] \\(k\\) param_lateral_sup_k \\(\\gamma\\) param_lateral_sup_gamma","code":""},{"path":"/reference/lateral.html","id":"-supplyratio-","dir":"Reference","previous_headings":"","what":"_SupplyRatio:","title":"lateral flux — lateral","text":"\\[F_{ltrl} = k * W_{grnd}\\] \\(k\\) param_lateral_sur_k","code":""},{"path":"/reference/lateral.html","id":"-gr-j-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4J (Perrin et al. 2003) :","title":"lateral flux — lateral","text":"\\[F_{ltrl} = M_{ltrl} \\left( \\frac{W_{grnd}}{C_{grnd}} \\right)^{7/2}  \\] \\(M_{ltrl}\\) ground_potentialLateral_mm","code":""},{"path":"/reference/lateral.html","id":"-gr-jfix-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4Jfix (Perrin et al. 2003)","title":"lateral flux — lateral","text":"based _GR4J use new parameter replace numer 4: \\[F_{ltrl} = M_{ltrl} \\left( \\frac{W_{grnd}}{C_{grnd}} \\right)^\\gamma  \\] \\(\\gamma\\) param_lateral_grf_gamma","code":""},{"path":"/reference/lateral.html","id":"-threshpow","dir":"Reference","previous_headings":"","what":"_ThreshPow","title":"lateral flux — lateral","text":"based _GR4Jfix add one threshold \\(\\phi_b\\): \\[F_{ltrl} = 0, \\quad \\frac{W_{grnd}}{C_{grnd}} < \\phi_b\\] \\[F_{ltrl} = M_{ltrl} \\left(\\frac{\\frac{W_{grnd}}{C_{grnd}} - \\phi_b}{1-\\phi_b} \\right)^\\gamma, \\quad \\frac{W_{grnd}}{C_{grnd}} \\geq \\phi_b\\] \\(\\phi_b\\) param_lateral_thp_thresh \\(\\gamma\\) param_lateral_thp_gamma","code":""},{"path":"/reference/lateral.html","id":"-arno-franchini-and-pacciani-liang-et-al-","dir":"Reference","previous_headings":"","what":"_Arno (Franchini and Pacciani 1991; Liang et al. 1994)","title":"lateral flux — lateral","text":"also two cases divided threshold water content \\(\\phi_b\\): \\[F_{ltrl} = k M_{ltrl} \\frac{W_{grnd}}{C_{grnd}}, \\quad \\frac{W_{grnd}}{C_{grnd}} < \\phi_b\\] \\[F_{ltrl} = k M_{ltrl} \\frac{W_{grnd}}{C_{grnd}} + (1-k) M_{ltrl} \\left(\\frac{W_{grnd} - W_s}{C_{grnd} - W_s} \\right)^2, \\quad \\frac{W_{grnd}}{C_{grnd}} \\geq \\phi_b\\] \\[W_s = k C_{grnd}\\] \\(\\phi_b\\) param_lateral_arn_thresh \\(k\\) param_lateral_arn_k","code":""},{"path":"/reference/lateral.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"lateral flux — lateral","text":"Franchini M, Pacciani M (1991). “Comparative Analysis Several Conceptual Rainfall-Runoff Models.” Journal Hydrology, 122(1), 161--219. ISSN 0022-1694, doi: 10.1016/0022-1694(91)90178-K . Liang X, Lettenmaier D, Wood E, Burges S (1994). “Simple Hydrologically Based Model Land Surface Water Energy Fluxes GSMs.” J. Geophys. Res., 99. doi: 10.1029/94JD00483 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 .","code":""},{"path":"/reference/modells.html","id":null,"dir":"Reference","previous_headings":"","what":"modells build with EDCHM modulas — modells","title":"modells build with EDCHM modulas — modells","text":"example models EDCHM modulas example models EDCHM modulas","code":""},{"path":"/reference/modells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modells build with EDCHM modulas — modells","text":"","code":"EDCHM_GR4J(   n_time,   n_spat,   atmos_potentialEvatrans_mm,   atmos_precipitation_mm,   S_,   R_,   X_1,   X_2,   X_3,   X_4 )  EDCHM_GR4J_full(   n_time,   n_spat,   atmos_potentialEvatrans_mm,   atmos_precipitation_mm,   S_,   R_,   X_1,   X_2,   X_3,   X_4 )  EDCHM_mini(   n_time,   n_spat,   atmos_potentialEvatrans_mm,   atmos_precipitation_mm,   ground_capacity_mm,   ground_water_mm,   land_impermeableFrac_1,   soil_capacity_mm,   soil_potentialPercola_mm,   soil_water_mm,   confluenLand_responseTime_TS,   confluenGround_responseTime_TS,   param_baseflow_grf_gamma,   param_confluenLand_kel_k,   param_evatrans_ubc_gamma,   param_infilt_ubc_P0AGEN,   param_percola_arn_k,   param_percola_arn_thresh )  EDCHM_mini_full(   n_time,   n_spat,   atmos_potentialEvatrans_mm,   atmos_precipitation_mm,   ground_capacity_mm,   ground_water_mm,   land_impermeableFrac_1,   soil_capacity_mm,   soil_potentialPercola_mm,   soil_water_mm,   confluenLand_responseTime_TS,   confluenGround_responseTime_TS,   param_baseflow_grf_gamma,   param_confluenLand_kel_k,   param_evatrans_ubc_gamma,   param_infilt_ubc_P0AGEN,   param_percola_arn_k,   param_percola_arn_thresh )  EDCHM_snow(   n_time,   n_spat,   atmos_potentialEvatrans_mm,   atmos_precipitation_mm,   atmos_temperature_Cel,   ground_capacity_mm,   ground_water_mm,   land_impermeableFrac_1,   snow_ice_mm,   soil_capacity_mm,   soil_potentialPercola_mm,   soil_water_mm,   time_step_h,   confluenLand_responseTime_TS,   confluenGround_responseTime_TS,   param_atmos_thr_Ts,   param_baseflow_grf_gamma,   param_confluenLand_kel_k,   param_evatrans_ubc_gamma,   param_infilt_ubc_P0AGEN,   param_percola_arn_k,   param_percola_arn_thresh,   param_snow_fac_f,   param_snow_fac_Tmelt )  EDCHM_snow_full(   n_time,   n_spat,   atmos_potentialEvatrans_mm,   atmos_precipitation_mm,   atmos_temperature_Cel,   ground_capacity_mm,   ground_water_mm,   land_impermeableFrac_1,   snow_ice_mm,   soil_capacity_mm,   soil_potentialPercola_mm,   soil_water_mm,   time_step_h,   confluenLand_responseTime_TS,   confluenGround_responseTime_TS,   param_atmos_thr_Ts,   param_baseflow_grf_gamma,   param_confluenLand_kel_k,   param_evatrans_ubc_gamma,   param_infilt_ubc_P0AGEN,   param_percola_arn_k,   param_percola_arn_thresh,   param_snow_fac_f,   param_snow_fac_Tmelt )"},{"path":"/reference/modells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modells build with EDCHM modulas — modells","text":"n_time, n_spat number time step spatial unit atmos_potentialEvatrans_mm (mm/m2/TS) potential / reference evapotranspiration atmos_precipitation_mm (mm/m2/TS) precipitaion volum S_, R_ storage water S R X_1, X_2, X_3, X_4 parameters GR4J ground_capacity_mm (mm/m2) water storage capacity groundLy ground_water_mm (mm/m2/TS) water volume groundLy land_impermeableFrac_1 <0, 1> maximum impermeable fraction th soil fully saturated soil_capacity_mm (mm/m2) average soil Capacity (maximal storage capacity) soil_potentialPercola_mm <0.01, 7> (mm/m2/TS) potential percolation soil_water_mm (mm/m2) water volume soilLy confluenLand_responseTime_TS, confluenGround_responseTime_TS, param_confluenLand_kel_k, parameters modells param_baseflow_grf_gamma <2, 7> exponential parameter baseflow_GR4Jfix() param_evatrans_ubc_gamma <0.5, 2> parameter evatransActual_UBC() param_infilt_ubc_P0AGEN <0.1, 4> coefficient parameter infilt_UBC() param_percola_arn_k <0.1, 1> exponential parameter percola_ThreshPow() param_percola_arn_thresh <0.1, 0.9> coefficient parameter percola_ThreshPow() atmos_temperature_Cel (Cel) average air temperature time phase snow_ice_mm (mm/m2) water equivalent ice snowpack time_step_h <1, 24> (h) time step hour param_atmos_thr_Ts <-1, 3> (Cel) threshold air temperature snow, parameter atmosSnow_ThresholdT() param_snow_fac_f <0.05, 2> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter snowMelt_Factor() param_snow_fac_Tmelt <0, 3> (Cel) snow melt temperature parameter snowMelt_Factor()","code":""},{"path":"/reference/modells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modells build with EDCHM modulas — modells","text":"EDCHM_xxxx: stream flow mm/TS EDCHM_xxxx_full: list variablen stream flow mm/TS","code":""},{"path":"/reference/modells.html","id":"edchm-gr-j-perrin-et-al-","dir":"Reference","previous_headings":"","what":"EDCHM_GR4J (Perrin et al. 2003) :","title":"modells build with EDCHM modulas — modells","text":"Total like original GR4J","code":""},{"path":"/reference/modells.html","id":"edchm-gr-j-full-perrin-et-al-","dir":"Reference","previous_headings":"","what":"EDCHM_GR4J_full (Perrin et al. 2003) :","title":"modells build with EDCHM modulas — modells","text":"variable output","code":""},{"path":"/reference/modells.html","id":"edchm-mini-","dir":"Reference","previous_headings":"","what":"EDCHM_mini:","title":"modells build with EDCHM modulas — modells","text":"model based mini-structure six process: evatransActual (evatransSoil) infilt percola baseflow confluenIUH (confluenLand) confluenIUH (confluenGround)","code":""},{"path":"/reference/modells.html","id":"edchm-mini-full-","dir":"Reference","previous_headings":"","what":"EDCHM_mini_full:","title":"modells build with EDCHM modulas — modells","text":"full Output","code":""},{"path":"/reference/modells.html","id":"edchm-snow-","dir":"Reference","previous_headings":"","what":"EDCHM_snow:","title":"modells build with EDCHM modulas — modells","text":"model snowMelt atmosSnow based mini-modell","code":""},{"path":"/reference/modells.html","id":"edchm-snow-full-","dir":"Reference","previous_headings":"","what":"EDCHM_snow_full:","title":"modells build with EDCHM modulas — modells","text":"full Output","code":""},{"path":"/reference/modells.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"modells build with EDCHM modulas — modells","text":"Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 .","code":""},{"path":"/reference/percola.html","id":null,"dir":"Reference","previous_headings":"","what":"percolation — percola","title":"percolation — percola","text":"hydrological modeling, percolation refers process water soil moves downward pores cracks soil rock. process physically driven moisture gradient, often simplified conceptual percolation models (Craig Tea 2022) . can calculated water soil layer \\(W_{soil}\\), can also tread part \\(W_{soil}\\). can give function : \\[F_{prcl} = f_{percola}(D_{grnd}, D_{soil})\\] : \\[F_{prcl} = f_{percola}(W_{soil}, C_{soil}, W_{grnd}, C_{grnd}, ...) = k^* W_{soil}\\] \\[F_{prcl} \\leq W_{soil}\\] \\[F_{prcl} \\leq C_{grnd} - W_{grnd}\\] \\(F_{prcl}\\) soil_percola_mm \\(W_{soil}\\) water_soil_mm \\(C_{soil}\\) capacity_soil_mm \\(W_{grnd}\\) ground_water_mm \\(C_{grnd}\\) capacity_water_mm \\(k^*\\) estimated ratio output density distribution 8 methods:","code":""},{"path":"/reference/percola.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"percolation — percola","text":"","code":"percola_GR4J(soil_water_mm, soil_capacity_mm)  percola_GR4Jfix(soil_water_mm, soil_capacity_mm, param_percola_grf_k)  percola_MaxPow(   soil_water_mm,   soil_capacity_mm,   soil_potentialPercola_mm,   param_percola_map_gamma )  percola_ThreshPow(   soil_water_mm,   soil_capacity_mm,   soil_potentialPercola_mm,   param_percola_thp_thresh,   param_percola_thp_gamma )  percola_Arno(   soil_water_mm,   soil_capacity_mm,   soil_potentialPercola_mm,   param_percola_arn_thresh,   param_percola_arn_k )  percola_BevenWood(   soil_water_mm,   soil_capacity_mm,   soil_fieldCapacityPerc_1,   soil_potentialPercola_mm )  percola_SupplyPow(   soil_water_mm,   soil_capacity_mm,   param_percola_sup_k,   param_percola_sup_gamma )  percola_SupplyRatio(soil_water_mm, param_percola_sur_k)"},{"path":"/reference/percola.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"percolation — percola","text":"soil_water_mm (mm/m2) water volume soilLy soil_capacity_mm (mm/m2) average soil Capacity (maximal storage capacity) param_percola_grf_k <0.01, 1> coefficient parameter percola_GR4Jfix() soil_potentialPercola_mm <0.01, 7> (mm/m2/TS) potential percolation param_percola_map_gamma <0.1, 5> exponential parameter percola_MaxPow() param_percola_thp_thresh <0.1, 0.9> coefficient parameter percola_ThreshPow() param_percola_thp_gamma <0.1, 5> exponential parameter percola_ThreshPow() param_percola_arn_thresh <0.1, 0.9> coefficient parameter percola_ThreshPow() param_percola_arn_k <0.1, 1> exponential parameter percola_ThreshPow() soil_fieldCapacityPerc_1 <0, 1> relative ratio (\\(\\theta_fc / \\theta^*\\)) water content can drainage gravity param_percola_sup_k <0.01, 1> coefficient parameter percola_SupplyPow() param_percola_sup_gamma <0, 7> parameter percola_SupplyPow() param_percola_sur_k <0.01, 1> coefficient parameter percola_SupplyRatio()","code":""},{"path":"/reference/percola.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"percolation — percola","text":"percola_mm (mm/m2)","code":""},{"path":"/reference/percola.html","id":"-gr-j-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4J (Perrin et al. 2003) :","title":"percolation — percola","text":"\\[k^* = 1 - \\left[ 1 + \\left(\\frac{4}{9} \\frac{W_{soil}}{C_{soil}} \\right)^4 \\right]^{-1/4}\\] \\(k^*\\) estimated ratio","code":""},{"path":"/reference/percola.html","id":"-gr-jfix-perrin-et-al-","dir":"Reference","previous_headings":"","what":"_GR4Jfix (Perrin et al. 2003) :","title":"percolation — percola","text":"\\[k^* = 1 - \\left[ 1 + \\left(k \\frac{W_{soil}}{C_{soil}} \\right)^4 \\right]^{-1/4}\\] \\(k\\) param_percola_grf_k","code":""},{"path":"/reference/percola.html","id":"-maxpow-","dir":"Reference","previous_headings":"","what":"_MaxPow:","title":"percolation — percola","text":"\\[F_{prcl} = M_{prcl} \\left(\\frac{W_{soil}}{C_{soil}} \\right)^\\gamma\\] \\(M_{prcl}\\) soil_potentialPercola_mm \\(\\gamma\\) param_baseflow_map_gamma","code":""},{"path":"/reference/percola.html","id":"-threshpow","dir":"Reference","previous_headings":"","what":"_ThreshPow","title":"percolation — percola","text":"based _MaxPow add one threshold \\(\\phi_b\\): \\[F_{prcl} = 0, \\quad \\frac{W_{soil}}{C_{soil}} < \\phi_b\\] \\[F_{prcl} = M_{prcl} \\left(\\frac{\\frac{W_{soil}}{C_{soil}} - \\phi_b}{1-\\phi_b} \\right)^\\gamma, \\quad \\frac{W_{soil}}{C_{soil}} \\geq \\phi_b\\] \\(\\phi_b\\) param_percola_thp_thresh \\(\\gamma\\) param_percola_thp_gamma","code":""},{"path":"/reference/percola.html","id":"-arno-franchini-and-pacciani-liang-et-al-","dir":"Reference","previous_headings":"","what":"_Arno (Franchini and Pacciani 1991; Liang et al. 1994)","title":"percolation — percola","text":"also two cases divided threshold water content \\(\\phi_b\\): (method actually original method, analogy baseflow_Arno) \\[F_{prcl} = k M_{prcl} \\frac{W_{soil}}{C_{soil}}, \\quad \\frac{W_{soil}}{C_{soil}} < \\phi_b\\] \\[F_{prcl} = k M_{prcl} \\frac{W_{soil}}{C_{soil}} + (1-k) M_{prcl} \\left(\\frac{W_{soil} - W_s}{C_{soil} - W_s} \\right)^2, \\quad \\frac{W_{soil}}{C_{soil}} \\geq \\phi_b\\] \\[W_s = k C_{soil}\\] \\(\\phi_b\\) param_percola_arn_thresh \\(k\\) param_percola_arn_k","code":""},{"path":"/reference/percola.html","id":"-bevenwood-beven-and-wood-beven-et-al-","dir":"Reference","previous_headings":"","what":"_BevenWood (Beven and Wood 1983; Beven et al. 1995) :","title":"percolation — percola","text":"\\[k =  \\frac{W_{soil}}{C_{soil} - W_{soil}} \\quad {\\rm } \\quad k \\leq 1\\] \\[F_{prcl} = k M_{prcl}\\] \\(k_{fc}\\) soil_fieldCapacityPerc_1 \\(\\gamma\\) param_percola_sup_gamma","code":""},{"path":"/reference/percola.html","id":"-supplypow-","dir":"Reference","previous_headings":"","what":"_SupplyPow:","title":"percolation — percola","text":"\\[k^* = k \\left(\\frac{W_{soil}}{C_{soil}} \\right)^\\gamma\\] \\(k\\) param_percola_sup_k \\(\\gamma\\) param_percola_sup_gamma","code":""},{"path":"/reference/percola.html","id":"-supplyratio-","dir":"Reference","previous_headings":"","what":"_SupplyRatio:","title":"percolation — percola","text":"\\[k^* = k\\] \\(k\\) param_percola_sur_k","code":""},{"path":"/reference/percola.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"percolation — percola","text":"Beven K, Lamb R, Quinn P, Romanowicz R, Freer J (1995). “TOPMODEL.” Computer models watershed hydrology., 627--668. Beven K, Wood EF (1983). “Catchment Geomorphology Dynamics Runoff Contributing Areas.” Journal Hydrology, 65(1), 139--158. ISSN 0022-1694, doi: 10.1016/0022-1694(83)90214-7 . Craig JR, Tea RD (2022). “Raven User's Developer's Manual (Version 3.5).” Franchini M, Pacciani M (1991). “Comparative Analysis Several Conceptual Rainfall-Runoff Models.” Journal Hydrology, 122(1), 161--219. ISSN 0022-1694, doi: 10.1016/0022-1694(91)90178-K . Liang X, Lettenmaier D, Wood E, Burges S (1994). “Simple Hydrologically Based Model Land Surface Water Energy Fluxes GSMs.” J. Geophys. Res., 99. doi: 10.1029/94JD00483 . Perrin C, Michel C, Andr攼㸹assian V (2003). “Improvement Parsimonious Model Streamflow Simulation.” Journal Hydrology, 279(1-4), 275--289. ISSN 00221694, doi: 10.1016/S0022-1694(03)00225-7 .","code":""},{"path":"/reference/snowMelt.html","id":null,"dir":"Reference","previous_headings":"","what":"snow — snowMelt","title":"snow — snowMelt","text":"concept conceptual HM, melt snowpack always calculated energy availability (state-variable temperature \\(T\\) flux-variable (nett-) radiation \\(Rn\\)) solid water (snow ice) availability \\(W_{snow}\\) snowpack. complex processes, refrozen residual water, ignored. simplify model, layer snowLy store solid water melt much possible energy sufficient. can give function : \\[F_{melt} = f_{snowMelt}(D_{atms}, D_{snow})\\] : \\[F_{melt}  = f_{snowMelt}(T, ...)\\] \\[F_{melt} \\leq W_{snow} \\] \\(F_{melt}\\) snow_melt_mm \\(W_{snow}\\) snow_ice_mm \\(T\\) average temperature different snowMelt methods estimate maximal snow melt \\(M_{max}\\). output density distribution 2 methods:","code":""},{"path":"/reference/snowMelt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"snow — snowMelt","text":"","code":"snowMelt_Kustas(   snow_ice_mm,   atmos_temperature_Cel,   atmos_netRadiat_MJ,   time_step_h,   param_snow_kus_fE,   param_snow_kus_fT )  snowMelt_Factor(   snow_ice_mm,   atmos_temperature_Cel,   time_step_h,   param_snow_fac_f,   param_snow_fac_Tmelt )"},{"path":"/reference/snowMelt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"snow — snowMelt","text":"snow_ice_mm (mm/m2) water equivalent ice snowpack atmos_temperature_Cel (Cel) average air temperature time phase atmos_netRadiat_MJ (MJ/m2/TS) balance energy absorbed, reflected emitted earths surface difference incoming net shortwave (Rns) net outgoing longwave (Rnl) radiation time_step_h <1, 24> (h) time step hour param_snow_kus_fE <0.0005, 0.003> (mm/m2/MJ) snow melt temperature parameter snowMelt_Factor() param_snow_kus_fT <0.05, 1> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter snowMelt_Factor() param_snow_fac_f <0.05, 2> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter snowMelt_Factor() param_snow_fac_Tmelt <0, 3> (Cel) snow melt temperature parameter snowMelt_Factor()","code":""},{"path":"/reference/snowMelt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"snow — snowMelt","text":"snow_melt_mm (mm/m2) melted snow","code":""},{"path":"/reference/snowMelt.html","id":"-kustas-kustas-et-al-","dir":"Reference","previous_headings":"","what":"_Kustas (Kustas et al. 1994) :","title":"snow — snowMelt","text":"\\[F_{melt}  = m_T T + m_E R_n\\] due temperature one energy-state-variable, order adjust subday scale need add new time interval \\(t_h\\) 1 24 hour \\[F_{melt}  = m_T T t_h + m_E R_n\\] \\(m_T\\) param_snow_kus_fT \\(m_E\\) param_snow_kus_fE \\(R_n\\) daily net radiation","code":""},{"path":"/reference/snowMelt.html","id":"-factor-dingman-","dir":"Reference","previous_headings":"","what":"_Factor (Dingman 2014) :","title":"snow — snowMelt","text":"\\[F_{melt}  = m_T (T-T_b), \\quad T > T_b\\] \\(m_T\\) param_snow_fac_f \\(T_b\\) param_snow_fac_Tmelt","code":""},{"path":"/reference/snowMelt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"snow — snowMelt","text":"Dingman SL (2014). Physical Hydrology, Third Edition, Third edition. Waveland Press, Inc., Long Grove, Illinois. ISBN 978-1-4786-1118-9. Kustas WP, Rango , Uijlenhoet R (1994). “Simple Energy Budget Algorithm Snowmelt Runoff Model.” Water Resources Research, 30(5), 1515--1527. ISSN 00431397, doi: 10.1029/94WR00152 .","code":""},{"path":"/reference/test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Test data for modelling — test_data","title":"Test data for modelling — test_data","text":"Precipitation, temperature potential evapotranspiration Test data contain three data precipitation (7 forms, start P), temperature (5 forms, start T) potential evapotranspiration (2 forms, start E), 180 time steps. can used test model's run.","code":""},{"path":"/reference/test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test data for modelling — test_data","text":"","code":"EDCHM_TestData"},{"path":"/reference/test_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test data for modelling — test_data","text":"object class data.frame 180 rows 14 columns.","code":""}]
