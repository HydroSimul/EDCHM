// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// atmos_NettoRadiat
NumericVector atmos_NettoRadiat(NumericVector time_dayOfYear_, NumericVector atmos_temperature_Cel, NumericVector atmos_temperatureMax_Cel, NumericVector atmos_temperatureMin_Cel, NumericVector atmos_relativeHumidity_1, NumericVector atmos_solarRadiat_MJ, NumericVector land_latitude_Degree, NumericVector land_elevation_m);
RcppExport SEXP _EDCHM_atmos_NettoRadiat(SEXP time_dayOfYear_SEXP, SEXP atmos_temperature_CelSEXP, SEXP atmos_temperatureMax_CelSEXP, SEXP atmos_temperatureMin_CelSEXP, SEXP atmos_relativeHumidity_1SEXP, SEXP atmos_solarRadiat_MJSEXP, SEXP land_latitude_DegreeSEXP, SEXP land_elevation_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time_dayOfYear_(time_dayOfYear_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperature_Cel(atmos_temperature_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperatureMax_Cel(atmos_temperatureMax_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperatureMin_Cel(atmos_temperatureMin_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_relativeHumidity_1(atmos_relativeHumidity_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_solarRadiat_MJ(atmos_solarRadiat_MJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_latitude_Degree(land_latitude_DegreeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_elevation_m(land_elevation_mSEXP);
    rcpp_result_gen = Rcpp::wrap(atmos_NettoRadiat(time_dayOfYear_, atmos_temperature_Cel, atmos_temperatureMax_Cel, atmos_temperatureMin_Cel, atmos_relativeHumidity_1, atmos_solarRadiat_MJ, land_latitude_Degree, land_elevation_m));
    return rcpp_result_gen;
END_RCPP
}
// atmos_SaturatVaporPress
NumericVector atmos_SaturatVaporPress(NumericVector atmos_temperature_Cel);
RcppExport SEXP _EDCHM_atmos_SaturatVaporPress(SEXP atmos_temperature_CelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperature_Cel(atmos_temperature_CelSEXP);
    rcpp_result_gen = Rcpp::wrap(atmos_SaturatVaporPress(atmos_temperature_Cel));
    return rcpp_result_gen;
END_RCPP
}
// atmos_VaporPress
NumericVector atmos_VaporPress(NumericVector atmos_temperature_Cel, NumericVector atmos_relativeHumidity_1);
RcppExport SEXP _EDCHM_atmos_VaporPress(SEXP atmos_temperature_CelSEXP, SEXP atmos_relativeHumidity_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperature_Cel(atmos_temperature_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_relativeHumidity_1(atmos_relativeHumidity_1SEXP);
    rcpp_result_gen = Rcpp::wrap(atmos_VaporPress(atmos_temperature_Cel, atmos_relativeHumidity_1));
    return rcpp_result_gen;
END_RCPP
}
// atmos_WindSpeed2m
NumericVector atmos_WindSpeed2m(NumericVector atmos_windSpeed_m_s, NumericVector atmos_windMeasureHeight_m);
RcppExport SEXP _EDCHM_atmos_WindSpeed2m(SEXP atmos_windSpeed_m_sSEXP, SEXP atmos_windMeasureHeight_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_windSpeed_m_s(atmos_windSpeed_m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_windMeasureHeight_m(atmos_windMeasureHeight_mSEXP);
    rcpp_result_gen = Rcpp::wrap(atmos_WindSpeed2m(atmos_windSpeed_m_s, atmos_windMeasureHeight_m));
    return rcpp_result_gen;
END_RCPP
}
// baseflow_SupplyPow
NumericVector baseflow_SupplyPow(NumericVector ground_water_mm, NumericVector capacity_mm, NumericVector param_baseflow_sup_k, NumericVector param_baseflow_sup_gamma);
RcppExport SEXP _EDCHM_baseflow_SupplyPow(SEXP ground_water_mmSEXP, SEXP capacity_mmSEXP, SEXP param_baseflow_sup_kSEXP, SEXP param_baseflow_sup_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ground_water_mm(ground_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_baseflow_sup_k(param_baseflow_sup_kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_baseflow_sup_gamma(param_baseflow_sup_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(baseflow_SupplyPow(ground_water_mm, capacity_mm, param_baseflow_sup_k, param_baseflow_sup_gamma));
    return rcpp_result_gen;
END_RCPP
}
// baseflow_SupplyRatio
NumericVector baseflow_SupplyRatio(NumericVector ground_water_mm, NumericVector param_baseflow_sur_k);
RcppExport SEXP _EDCHM_baseflow_SupplyRatio(SEXP ground_water_mmSEXP, SEXP param_baseflow_sur_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ground_water_mm(ground_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_baseflow_sur_k(param_baseflow_sur_kSEXP);
    rcpp_result_gen = Rcpp::wrap(baseflow_SupplyRatio(ground_water_mm, param_baseflow_sur_k));
    return rcpp_result_gen;
END_RCPP
}
// capirise_SupplyRatio
NumericVector capirise_SupplyRatio(NumericVector ground_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_capirise_sur_k);
RcppExport SEXP _EDCHM_capirise_SupplyRatio(SEXP ground_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_capirise_sur_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ground_water_mm(ground_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_capirise_sur_k(param_capirise_sur_kSEXP);
    rcpp_result_gen = Rcpp::wrap(capirise_SupplyRatio(ground_water_mm, soil_water_mm, soil_capacity_mm, param_capirise_sur_k));
    return rcpp_result_gen;
END_RCPP
}
// capirise_SupplyPow
NumericVector capirise_SupplyPow(NumericVector ground_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_capirise_sup_k, NumericVector param_capirise_sup_gamma);
RcppExport SEXP _EDCHM_capirise_SupplyPow(SEXP ground_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_capirise_sup_kSEXP, SEXP param_capirise_sup_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ground_water_mm(ground_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_capirise_sup_k(param_capirise_sup_kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_capirise_sup_gamma(param_capirise_sup_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(capirise_SupplyPow(ground_water_mm, soil_water_mm, soil_capacity_mm, param_capirise_sup_k, param_capirise_sup_gamma));
    return rcpp_result_gen;
END_RCPP
}
// capirise_AcceptRatio
NumericVector capirise_AcceptRatio(NumericVector ground_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_capirise_acr_k);
RcppExport SEXP _EDCHM_capirise_AcceptRatio(SEXP ground_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_capirise_acr_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ground_water_mm(ground_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_capirise_acr_k(param_capirise_acr_kSEXP);
    rcpp_result_gen = Rcpp::wrap(capirise_AcceptRatio(ground_water_mm, soil_water_mm, soil_capacity_mm, param_capirise_acr_k));
    return rcpp_result_gen;
END_RCPP
}
// capirise_AcceptPow
NumericVector capirise_AcceptPow(NumericVector ground_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_capirise_acp_k, NumericVector param_capirise_acp_gamma);
RcppExport SEXP _EDCHM_capirise_AcceptPow(SEXP ground_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_capirise_acp_kSEXP, SEXP param_capirise_acp_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ground_water_mm(ground_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_capirise_acp_k(param_capirise_acp_kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_capirise_acp_gamma(param_capirise_acp_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(capirise_AcceptPow(ground_water_mm, soil_water_mm, soil_capacity_mm, param_capirise_acp_k, param_capirise_acp_gamma));
    return rcpp_result_gen;
END_RCPP
}
// confluen_IUH
NumericVector confluen_IUH(NumericVector confluen_inputWater_mm, NumericVector confluen_iuh_1);
RcppExport SEXP _EDCHM_confluen_IUH(SEXP confluen_inputWater_mmSEXP, SEXP confluen_iuh_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type confluen_inputWater_mm(confluen_inputWater_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type confluen_iuh_1(confluen_iuh_1SEXP);
    rcpp_result_gen = Rcpp::wrap(confluen_IUH(confluen_inputWater_mm, confluen_iuh_1));
    return rcpp_result_gen;
END_RCPP
}
// evatransPotential_TurcWendling
NumericVector evatransPotential_TurcWendling(NumericVector atmos_temperature_Cel, NumericVector atmos_solarRadiat_MJ, NumericVector time_step_h, NumericVector param_evatrans_tur_k);
RcppExport SEXP _EDCHM_evatransPotential_TurcWendling(SEXP atmos_temperature_CelSEXP, SEXP atmos_solarRadiat_MJSEXP, SEXP time_step_hSEXP, SEXP param_evatrans_tur_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperature_Cel(atmos_temperature_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_solarRadiat_MJ(atmos_solarRadiat_MJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time_step_h(time_step_hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_tur_k(param_evatrans_tur_kSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransPotential_TurcWendling(atmos_temperature_Cel, atmos_solarRadiat_MJ, time_step_h, param_evatrans_tur_k));
    return rcpp_result_gen;
END_RCPP
}
// evatransPotential_Linacre
NumericVector evatransPotential_Linacre(NumericVector time_dayOfYear_, NumericVector atmos_temperature_Cel, NumericVector atmos_relativeHumidity_1, NumericVector land_latitude_Degree, NumericVector land_elevation_m, NumericVector land_albedo_1);
RcppExport SEXP _EDCHM_evatransPotential_Linacre(SEXP time_dayOfYear_SEXP, SEXP atmos_temperature_CelSEXP, SEXP atmos_relativeHumidity_1SEXP, SEXP land_latitude_DegreeSEXP, SEXP land_elevation_mSEXP, SEXP land_albedo_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time_dayOfYear_(time_dayOfYear_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperature_Cel(atmos_temperature_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_relativeHumidity_1(atmos_relativeHumidity_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_latitude_Degree(land_latitude_DegreeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_elevation_m(land_elevation_mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_albedo_1(land_albedo_1SEXP);
    rcpp_result_gen = Rcpp::wrap(evatransPotential_Linacre(time_dayOfYear_, atmos_temperature_Cel, atmos_relativeHumidity_1, land_latitude_Degree, land_elevation_m, land_albedo_1));
    return rcpp_result_gen;
END_RCPP
}
// evatransPotential_FAO56
NumericVector evatransPotential_FAO56(NumericVector time_dayOfYear_, NumericVector atmos_temperature_Cel, NumericVector atmos_vaporPress_hPa, NumericVector atmos_saturatVaporPress_hPa, NumericVector atmos_netRadiat_MJ, NumericVector atmos_windSpeed2m_m_s, NumericVector land_latitude_Degree, NumericVector land_elevation_m);
RcppExport SEXP _EDCHM_evatransPotential_FAO56(SEXP time_dayOfYear_SEXP, SEXP atmos_temperature_CelSEXP, SEXP atmos_vaporPress_hPaSEXP, SEXP atmos_saturatVaporPress_hPaSEXP, SEXP atmos_netRadiat_MJSEXP, SEXP atmos_windSpeed2m_m_sSEXP, SEXP land_latitude_DegreeSEXP, SEXP land_elevation_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time_dayOfYear_(time_dayOfYear_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperature_Cel(atmos_temperature_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_vaporPress_hPa(atmos_vaporPress_hPaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_saturatVaporPress_hPa(atmos_saturatVaporPress_hPaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_netRadiat_MJ(atmos_netRadiat_MJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_windSpeed2m_m_s(atmos_windSpeed2m_m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_latitude_Degree(land_latitude_DegreeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_elevation_m(land_elevation_mSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransPotential_FAO56(time_dayOfYear_, atmos_temperature_Cel, atmos_vaporPress_hPa, atmos_saturatVaporPress_hPa, atmos_netRadiat_MJ, atmos_windSpeed2m_m_s, land_latitude_Degree, land_elevation_m));
    return rcpp_result_gen;
END_RCPP
}
// evatransActual_FestRatio
NumericVector evatransActual_FestRatio(NumericVector atmos_potentialEvatrans_mm, NumericVector water_mm, NumericVector capacity_mm, NumericVector param_evatrans_fst_k);
RcppExport SEXP _EDCHM_evatransActual_FestRatio(SEXP atmos_potentialEvatrans_mmSEXP, SEXP water_mmSEXP, SEXP capacity_mmSEXP, SEXP param_evatrans_fst_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_fst_k(param_evatrans_fst_kSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransActual_FestRatio(atmos_potentialEvatrans_mm, water_mm, capacity_mm, param_evatrans_fst_k));
    return rcpp_result_gen;
END_RCPP
}
// evatransActual_Supply
NumericVector evatransActual_Supply(NumericVector atmos_potentialEvatrans_mm, NumericVector water_mm, NumericVector capacity_mm);
RcppExport SEXP _EDCHM_evatransActual_Supply(SEXP atmos_potentialEvatrans_mmSEXP, SEXP water_mmSEXP, SEXP capacity_mmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransActual_Supply(atmos_potentialEvatrans_mm, water_mm, capacity_mm));
    return rcpp_result_gen;
END_RCPP
}
// evatransActual_SupplyRatio
NumericVector evatransActual_SupplyRatio(NumericVector atmos_potentialEvatrans_mm, NumericVector water_mm, NumericVector capacity_mm, NumericVector param_evatrans_sup_k);
RcppExport SEXP _EDCHM_evatransActual_SupplyRatio(SEXP atmos_potentialEvatrans_mmSEXP, SEXP water_mmSEXP, SEXP capacity_mmSEXP, SEXP param_evatrans_sup_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_sup_k(param_evatrans_sup_kSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransActual_SupplyRatio(atmos_potentialEvatrans_mm, water_mm, capacity_mm, param_evatrans_sup_k));
    return rcpp_result_gen;
END_RCPP
}
// evatransActual_SupplyPow
NumericVector evatransActual_SupplyPow(NumericVector atmos_potentialEvatrans_mm, NumericVector water_mm, NumericVector capacity_mm, NumericVector param_evatrans_pow_k, NumericVector param_evatrans_pow_gamma);
RcppExport SEXP _EDCHM_evatransActual_SupplyPow(SEXP atmos_potentialEvatrans_mmSEXP, SEXP water_mmSEXP, SEXP capacity_mmSEXP, SEXP param_evatrans_pow_kSEXP, SEXP param_evatrans_pow_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_pow_k(param_evatrans_pow_kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_pow_gamma(param_evatrans_pow_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransActual_SupplyPow(atmos_potentialEvatrans_mm, water_mm, capacity_mm, param_evatrans_pow_k, param_evatrans_pow_gamma));
    return rcpp_result_gen;
END_RCPP
}
// evatransActual_VIC
NumericVector evatransActual_VIC(NumericVector atmos_potentialEvatrans_mm, NumericVector water_mm, NumericVector capacity_mm, NumericVector param_evatrans_vic_gamma);
RcppExport SEXP _EDCHM_evatransActual_VIC(SEXP atmos_potentialEvatrans_mmSEXP, SEXP water_mmSEXP, SEXP capacity_mmSEXP, SEXP param_evatrans_vic_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_vic_gamma(param_evatrans_vic_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransActual_VIC(atmos_potentialEvatrans_mm, water_mm, capacity_mm, param_evatrans_vic_gamma));
    return rcpp_result_gen;
END_RCPP
}
// evatransActual_GR4J
NumericVector evatransActual_GR4J(NumericVector atmos_potentialEvatrans_mm, NumericVector capacity_mm, NumericVector water_mm);
RcppExport SEXP _EDCHM_evatransActual_GR4J(SEXP atmos_potentialEvatrans_mmSEXP, SEXP capacity_mmSEXP, SEXP water_mmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransActual_GR4J(atmos_potentialEvatrans_mm, capacity_mm, water_mm));
    return rcpp_result_gen;
END_RCPP
}
// evatransLand_Liang
NumericVector evatransLand_Liang(NumericVector atmos_potentialEvatrans_mm, NumericVector water_mm, NumericVector capacity_mm, NumericVector param_evatrans_lia_gamma);
RcppExport SEXP _EDCHM_evatransLand_Liang(SEXP atmos_potentialEvatrans_mmSEXP, SEXP water_mmSEXP, SEXP capacity_mmSEXP, SEXP param_evatrans_lia_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_lia_gamma(param_evatrans_lia_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransLand_Liang(atmos_potentialEvatrans_mm, water_mm, capacity_mm, param_evatrans_lia_gamma));
    return rcpp_result_gen;
END_RCPP
}
// evatransSoil_Liang
NumericVector evatransSoil_Liang(NumericVector atmos_potentialEvatrans_mm, NumericVector water_mm, NumericVector capacity_mm, NumericVector param_evatrans_lia_B);
RcppExport SEXP _EDCHM_evatransSoil_Liang(SEXP atmos_potentialEvatrans_mmSEXP, SEXP water_mmSEXP, SEXP capacity_mmSEXP, SEXP param_evatrans_lia_BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_potentialEvatrans_mm(atmos_potentialEvatrans_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type water_mm(water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type capacity_mm(capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_evatrans_lia_B(param_evatrans_lia_BSEXP);
    rcpp_result_gen = Rcpp::wrap(evatransSoil_Liang(atmos_potentialEvatrans_mm, water_mm, capacity_mm, param_evatrans_lia_B));
    return rcpp_result_gen;
END_RCPP
}
// infilt_SupplyRatio
NumericVector infilt_SupplyRatio(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_infilt_sur_k);
RcppExport SEXP _EDCHM_infilt_SupplyRatio(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_infilt_sur_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_sur_k(param_infilt_sur_kSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_SupplyRatio(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_sur_k));
    return rcpp_result_gen;
END_RCPP
}
// infilt_SupplyPow
NumericVector infilt_SupplyPow(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_infilt_sup_k, NumericVector param_infilt_sup_gamma);
RcppExport SEXP _EDCHM_infilt_SupplyPow(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_infilt_sup_kSEXP, SEXP param_infilt_sup_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_sup_k(param_infilt_sup_kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_sup_gamma(param_infilt_sup_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_SupplyPow(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_sup_k, param_infilt_sup_gamma));
    return rcpp_result_gen;
END_RCPP
}
// infilt_AcceptRatio
NumericVector infilt_AcceptRatio(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_infilt_acr_k);
RcppExport SEXP _EDCHM_infilt_AcceptRatio(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_infilt_acr_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_acr_k(param_infilt_acr_kSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_AcceptRatio(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_acr_k));
    return rcpp_result_gen;
END_RCPP
}
// infilt_AcceptPow
NumericVector infilt_AcceptPow(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_infilt_acp_k, NumericVector param_infilt_acp_gamma);
RcppExport SEXP _EDCHM_infilt_AcceptPow(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_infilt_acp_kSEXP, SEXP param_infilt_acp_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_acp_k(param_infilt_acp_kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_acp_gamma(param_infilt_acp_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_AcceptPow(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_acp_k, param_infilt_acp_gamma));
    return rcpp_result_gen;
END_RCPP
}
// infilt_HBV
NumericVector infilt_HBV(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_infilt_hbv_beta);
RcppExport SEXP _EDCHM_infilt_HBV(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_infilt_hbv_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_hbv_beta(param_infilt_hbv_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_HBV(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_hbv_beta));
    return rcpp_result_gen;
END_RCPP
}
// infilt_GR4J
NumericVector infilt_GR4J(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm);
RcppExport SEXP _EDCHM_infilt_GR4J(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_GR4J(land_water_mm, soil_water_mm, soil_capacity_mm));
    return rcpp_result_gen;
END_RCPP
}
// infilt_SCS
NumericVector infilt_SCS(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_infilt_scs_CN);
RcppExport SEXP _EDCHM_infilt_SCS(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_infilt_scs_CNSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_scs_CN(param_infilt_scs_CNSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_SCS(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_scs_CN));
    return rcpp_result_gen;
END_RCPP
}
// infilt_XAJ
NumericVector infilt_XAJ(NumericVector land_water_mm, NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_infilt_xaj_B);
RcppExport SEXP _EDCHM_infilt_XAJ(SEXP land_water_mmSEXP, SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_infilt_xaj_BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type land_water_mm(land_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_infilt_xaj_B(param_infilt_xaj_BSEXP);
    rcpp_result_gen = Rcpp::wrap(infilt_XAJ(land_water_mm, soil_water_mm, soil_capacity_mm, param_infilt_xaj_B));
    return rcpp_result_gen;
END_RCPP
}
// intercep_Full
NumericVector intercep_Full(NumericVector atmos_rain_mm, NumericVector land_interceptWater_mm, NumericVector land_interceptCapacity_mm);
RcppExport SEXP _EDCHM_intercep_Full(SEXP atmos_rain_mmSEXP, SEXP land_interceptWater_mmSEXP, SEXP land_interceptCapacity_mmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type atmos_rain_mm(atmos_rain_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_interceptWater_mm(land_interceptWater_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type land_interceptCapacity_mm(land_interceptCapacity_mmSEXP);
    rcpp_result_gen = Rcpp::wrap(intercep_Full(atmos_rain_mm, land_interceptWater_mm, land_interceptCapacity_mm));
    return rcpp_result_gen;
END_RCPP
}
// percola_GR4J
NumericVector percola_GR4J(NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_percola_gr4_k);
RcppExport SEXP _EDCHM_percola_GR4J(SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_percola_gr4_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_percola_gr4_k(param_percola_gr4_kSEXP);
    rcpp_result_gen = Rcpp::wrap(percola_GR4J(soil_water_mm, soil_capacity_mm, param_percola_gr4_k));
    return rcpp_result_gen;
END_RCPP
}
// percola_SupplyRatio
NumericVector percola_SupplyRatio(NumericVector soil_water_mm, NumericVector param_percola_sur_k);
RcppExport SEXP _EDCHM_percola_SupplyRatio(SEXP soil_water_mmSEXP, SEXP param_percola_sur_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_percola_sur_k(param_percola_sur_kSEXP);
    rcpp_result_gen = Rcpp::wrap(percola_SupplyRatio(soil_water_mm, param_percola_sur_k));
    return rcpp_result_gen;
END_RCPP
}
// percola_SupplyPow
NumericVector percola_SupplyPow(NumericVector soil_water_mm, NumericVector soil_capacity_mm, NumericVector param_percola_sup_k, NumericVector param_percola_sup_gamma);
RcppExport SEXP _EDCHM_percola_SupplyPow(SEXP soil_water_mmSEXP, SEXP soil_capacity_mmSEXP, SEXP param_percola_sup_kSEXP, SEXP param_percola_sup_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type soil_water_mm(soil_water_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type soil_capacity_mm(soil_capacity_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_percola_sup_k(param_percola_sup_kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_percola_sup_gamma(param_percola_sup_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(percola_SupplyPow(soil_water_mm, soil_capacity_mm, param_percola_sup_k, param_percola_sup_gamma));
    return rcpp_result_gen;
END_RCPP
}
// snowMelt_Kustas
NumericVector snowMelt_Kustas(NumericVector snow_ice_mm, NumericVector atmos_temperature_Cel, NumericVector atmos_netRadiat_MJ, NumericVector param_snow_kus_fE, NumericVector param_snow_kus_fT);
RcppExport SEXP _EDCHM_snowMelt_Kustas(SEXP snow_ice_mmSEXP, SEXP atmos_temperature_CelSEXP, SEXP atmos_netRadiat_MJSEXP, SEXP param_snow_kus_fESEXP, SEXP param_snow_kus_fTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type snow_ice_mm(snow_ice_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_temperature_Cel(atmos_temperature_CelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atmos_netRadiat_MJ(atmos_netRadiat_MJSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_snow_kus_fE(param_snow_kus_fESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_snow_kus_fT(param_snow_kus_fTSEXP);
    rcpp_result_gen = Rcpp::wrap(snowMelt_Kustas(snow_ice_mm, atmos_temperature_Cel, atmos_netRadiat_MJ, param_snow_kus_fE, param_snow_kus_fT));
    return rcpp_result_gen;
END_RCPP
}
// snowMelt_Factor
NumericVector snowMelt_Factor(NumericVector snow_ice_mm, NumericVector param_snow_fac_Tmelt, NumericVector param_snow_fac_Tb, NumericVector param_snow_fac_f);
RcppExport SEXP _EDCHM_snowMelt_Factor(SEXP snow_ice_mmSEXP, SEXP param_snow_fac_TmeltSEXP, SEXP param_snow_fac_TbSEXP, SEXP param_snow_fac_fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type snow_ice_mm(snow_ice_mmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_snow_fac_Tmelt(param_snow_fac_TmeltSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_snow_fac_Tb(param_snow_fac_TbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param_snow_fac_f(param_snow_fac_fSEXP);
    rcpp_result_gen = Rcpp::wrap(snowMelt_Factor(snow_ice_mm, param_snow_fac_Tmelt, param_snow_fac_Tb, param_snow_fac_f));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EDCHM_atmos_NettoRadiat", (DL_FUNC) &_EDCHM_atmos_NettoRadiat, 8},
    {"_EDCHM_atmos_SaturatVaporPress", (DL_FUNC) &_EDCHM_atmos_SaturatVaporPress, 1},
    {"_EDCHM_atmos_VaporPress", (DL_FUNC) &_EDCHM_atmos_VaporPress, 2},
    {"_EDCHM_atmos_WindSpeed2m", (DL_FUNC) &_EDCHM_atmos_WindSpeed2m, 2},
    {"_EDCHM_baseflow_SupplyPow", (DL_FUNC) &_EDCHM_baseflow_SupplyPow, 4},
    {"_EDCHM_baseflow_SupplyRatio", (DL_FUNC) &_EDCHM_baseflow_SupplyRatio, 2},
    {"_EDCHM_capirise_SupplyRatio", (DL_FUNC) &_EDCHM_capirise_SupplyRatio, 4},
    {"_EDCHM_capirise_SupplyPow", (DL_FUNC) &_EDCHM_capirise_SupplyPow, 5},
    {"_EDCHM_capirise_AcceptRatio", (DL_FUNC) &_EDCHM_capirise_AcceptRatio, 4},
    {"_EDCHM_capirise_AcceptPow", (DL_FUNC) &_EDCHM_capirise_AcceptPow, 5},
    {"_EDCHM_confluen_IUH", (DL_FUNC) &_EDCHM_confluen_IUH, 2},
    {"_EDCHM_evatransPotential_TurcWendling", (DL_FUNC) &_EDCHM_evatransPotential_TurcWendling, 4},
    {"_EDCHM_evatransPotential_Linacre", (DL_FUNC) &_EDCHM_evatransPotential_Linacre, 6},
    {"_EDCHM_evatransPotential_FAO56", (DL_FUNC) &_EDCHM_evatransPotential_FAO56, 8},
    {"_EDCHM_evatransActual_FestRatio", (DL_FUNC) &_EDCHM_evatransActual_FestRatio, 4},
    {"_EDCHM_evatransActual_Supply", (DL_FUNC) &_EDCHM_evatransActual_Supply, 3},
    {"_EDCHM_evatransActual_SupplyRatio", (DL_FUNC) &_EDCHM_evatransActual_SupplyRatio, 4},
    {"_EDCHM_evatransActual_SupplyPow", (DL_FUNC) &_EDCHM_evatransActual_SupplyPow, 5},
    {"_EDCHM_evatransActual_VIC", (DL_FUNC) &_EDCHM_evatransActual_VIC, 4},
    {"_EDCHM_evatransActual_GR4J", (DL_FUNC) &_EDCHM_evatransActual_GR4J, 3},
    {"_EDCHM_evatransLand_Liang", (DL_FUNC) &_EDCHM_evatransLand_Liang, 4},
    {"_EDCHM_evatransSoil_Liang", (DL_FUNC) &_EDCHM_evatransSoil_Liang, 4},
    {"_EDCHM_infilt_SupplyRatio", (DL_FUNC) &_EDCHM_infilt_SupplyRatio, 4},
    {"_EDCHM_infilt_SupplyPow", (DL_FUNC) &_EDCHM_infilt_SupplyPow, 5},
    {"_EDCHM_infilt_AcceptRatio", (DL_FUNC) &_EDCHM_infilt_AcceptRatio, 4},
    {"_EDCHM_infilt_AcceptPow", (DL_FUNC) &_EDCHM_infilt_AcceptPow, 5},
    {"_EDCHM_infilt_HBV", (DL_FUNC) &_EDCHM_infilt_HBV, 4},
    {"_EDCHM_infilt_GR4J", (DL_FUNC) &_EDCHM_infilt_GR4J, 3},
    {"_EDCHM_infilt_SCS", (DL_FUNC) &_EDCHM_infilt_SCS, 4},
    {"_EDCHM_infilt_XAJ", (DL_FUNC) &_EDCHM_infilt_XAJ, 4},
    {"_EDCHM_intercep_Full", (DL_FUNC) &_EDCHM_intercep_Full, 3},
    {"_EDCHM_percola_GR4J", (DL_FUNC) &_EDCHM_percola_GR4J, 3},
    {"_EDCHM_percola_SupplyRatio", (DL_FUNC) &_EDCHM_percola_SupplyRatio, 2},
    {"_EDCHM_percola_SupplyPow", (DL_FUNC) &_EDCHM_percola_SupplyPow, 4},
    {"_EDCHM_snowMelt_Kustas", (DL_FUNC) &_EDCHM_snowMelt_Kustas, 5},
    {"_EDCHM_snowMelt_Factor", (DL_FUNC) &_EDCHM_snowMelt_Factor, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_EDCHM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
