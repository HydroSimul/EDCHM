% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EDCHM-package.R
\docType{package}
\name{EDCHM-package}
\alias{EDCHM-package}
\title{A Brief Introduction to EDCHM}
\description{
The \link{EDCHM} package is a flexible hydrological modeling framework that incorporates a collection of well-known models,
such as GR4J \insertCite{GR4J_Perrin_2003}{EDCHM}, HBV \insertCite{HBV_Lindstrom_1997}{EDCHM}, VIC \insertCite{VIC_Wood_1992}{EDCHM}, and UBC \insertCite{UBC_Quick_1977}{EDCHM}. Each model is divided into clear, well-defined processes as individual, self-contained modules.
\link{EDCHM} allows users to not only easily select and combine different processes to create new model structures, but also to choose from a range of methods for each specific process.
This provides a high degree of flexibility and customization.
\link{EDCHM} also allows users to divide the research catchment into sub-basins, grids, or hydrological response units (HRUs), providing a high degree of spatial resolution and flexibility.
This enables users to capture and simulate the water cycle at different scales, from the regional level down to the level of individual land units or catchment areas.
}
\section{Overview of this document}{
Due to the limitations of the Rd document format, the topics in the \link{EDCHM} package documentation are ordered alphabetically.
To help users navigate the documentation, an auxiliary table is provided that outlines the design of the \link{EDCHM} package.

You will find some basic concepts and overview of hole \link{EDCHM} in:
\itemize{
\item \link{EDCHM-package}: basic concepts and describe of this document
\item \link{all_vari}: description of all the variables
\item \link{all_param}: description of all the parameters with ranges
}

You can see all of the 12 process with their associated 62 methods (modules) in:
\itemize{
\item \link{snowMelt}: melt the snow into liquid water
\item \link{intercep}: intercept the water before is arrive the land surface
\item \link{evatransActual}: calculate the actual evapotranspiration from interception of water in th soil
\item \link{infilt}: water from land surface enters the soil
\item \link{percola}: soil water through the pores of aquifer movement to ground water
\item \link{inteflow}: runoff in the soil layer, which from \code{soilLy} directly into the streams or rivers
\item \link{capirise}: ground water upward to the unsaturated soil layer
\item \link{baseflow}: the portion of groundwater, that directly into the streams or rivers
\item \link{lateral}: water exchange with other basin  in the groundwater layer
\item \link{confluenIUH}: runoff (runoff, interflow, baseflow) from the hydrological unit to the rivers
\item \link{atmosSnow}: devide the precipitation into rainfall and snowfall
\item \link{evatransPotential}: calculates the potential evapotranspiration
}

You get the information how to use \link{EDCHM} and calibrate in:
\itemize{
\item \link{build_modell}: model building
\item \link{cali}: calibrate algorithms
}
}

\section{Layer and Process}{
Before using the \code{EDCHM} framework, it is necessary to have a basic understanding of its concepts.

\if{html}{\figure{edchm_layer.svg}}
\if{latex}{\figure{edchm_layer.pdf}{options: width=150mm}}

In the \code{EDCHM} framework, a \code{Layer} is defined as a vertical space with common characteristics.
\code{EDCHM} defines five basic layers:
\itemize{
\item \code{atmosLy}: only stores meteorological data but doesn't interact with other hydrological processes (in current version).
\item \code{snowLy}: is the layer of snow.
\item \code{landLy}: consists of two sublayers. Sublayer \code{intcpt} is a storage for intercepted water, which can be evaporated. Sublayer \code{land} serves only as a temperature layer for "pounded water" and doesn't have any storage capacity.
\item \code{soilLy}: is defined as an unsaturated zone between land surface and water table of groundwater.
\item \code{groundLy}: is defined as a saturated zone of groundwater.
}

In the \code{EDCHM} framework, a \code{Process} related to the movement or distribution of water on Earth.
Some of them occur in a single layer, some of them occur between two layers.
Here has defined 9 hydrological processes:
\itemize{
\item \link{snowMelt}: melt the snow into liquid water.
\item \link{intercep}: intercept the water before is arrive the land surface.
\item \link{evatransActual}: calculate the actual evapotranspiration from interception of water in th soil.
\item \link{infilt}: water from land surface enters the soil.
\item \link{percola}: soil water through the pores of aquifer movement to ground water.
\item \link{inteflow}: runoff in the soil layer, which from \code{soilLy} directly into the streams or rivers.
\item \link{capirise}: ground water upward to the unsaturated soil layer.
\item \link{baseflow}: the portion of groundwater, that directly into the streams or rivers.
\item \link{lateral}: water exchange with other basin  in the groundwater layer.
\item \link{confluenIUH}: runoff (runoff, interflow, baseflow) from the hydrological unit to the rivers,
in this process the water volume will not be changed but the distribution the time axis will be recalculeted with IUH (Instantaneous Unit Hydrograph) method.
}

In addition, there are two meteological process:
\itemize{
\item \link{atmosSnow}: devide the precipitation into rainfall and snowfall.
\item \link{evatransPotential}: calculates the potential evapotranspiration.
are both considered meteorological processes because they can be directly obtained from meteorological datasets or calculated using only meteorological data.
The results of these processes serve always as input data for hydrological processes.
\code{evatransPotential} is a crucial step in determining the actual evapotranspiration by most hydrological models.
}
}

\section{Variable and Parameter define}{
With a clear understanding of layers and processes, we can now move on to the basic definitions in the context of modeling.

All variable names in the EDCHM framework are composed of three parts: a \strong{group-name}, a \strong{physical-name} and a \strong{variable-units}
These parts are separated by an underscore \verb{_}.
\itemize{
\item \code{group-name}: name of the \code{Layer} in which the variable is located.
Sometimes it can also be the Process name or \code{time}, one important dimension.
The \code{group-name} is limited to a maximum of 8 characters and must be in lowercase letters.
\item \code{physical-name}: the physical variable name, and it uses \emph{camelCase} to combine multiple words. And the water volume will always simplified as \code{water}.
\item \code{variable-units}: the physical units of the variable
To simplify the program, all time-dependent variables use \code{TS} as the time unit, which is defined by the model, it can be 1 hour, 4, 12, 24 hours and so on,
but the time unit is not included in the variable name.
Additionally, all variables are assumed to be homogeneous in the area, so the area unit square meter (\code{m2}) is also not included in the variable name.
}

\strong{group_variableName_unit} some like \code{land_water_mm}, \code{atmos_temperature_Cel}

\loadmathjax

The following tables list the model variables and their corresponding formula symbols used in the \code{EDCHM}:
\itemize{
\item some state variables and Capicity of the layer storage:
}\tabular{llll}{
   \strong{Variable} \tab \strong{Symbol} \tab \strong{Unit} \tab \strong{Description} \cr
   \code{water_mm} \tab \mjseqn{W} \tab mm/m2 \tab water volume in one \code{Layer} \cr
   \code{land_water_mm} \tab \mjseqn{W_{land}} \tab mm/m2 \tab .. in \code{landLy} \cr
   \code{land_interceptWater_mm} \tab \mjseqn{W_{itcp}} \tab mm/m2 \tab .. in \code{landLy} (intercepted) \cr
   \code{snow_ice_mm} \tab \mjseqn{W_{snow}} \tab mm/m2 \tab .. in \code{snowLy} (equal water) \cr
   \code{soil_water_mm} \tab \mjseqn{W_{soil}} \tab mm/m2 \tab .. in \code{soilLy} \cr
   \code{ground_water_mm} \tab \mjseqn{W_{grnd}} \tab mm/m2 \tab .. in \code{groundLy} \cr
   \code{capacity_mm} \tab \mjseqn{C} \tab mm/m2 \tab maximal capacity of storage in one \code{Layer} \cr
   \code{land_interceptCapacity_mm} \tab \mjseqn{C_{itcp}} \tab mm/m2 \tab .. in \code{landLy} (intercepted) \cr
   \code{soil_capacity_mm} \tab \mjseqn{C_{soil}} \tab mm/m2 \tab .. in \code{soilLy} \cr
   \code{ground_capacity_mm} \tab \mjseqn{C_{grnd}} \tab mm/m2 \tab . in \code{groundLy} \cr
}

\itemize{
\item some flux variables and potential flux:
}\tabular{llll}{
   \strong{Variable} \tab \strong{Symbol} \tab \strong{Unit} \tab \strong{Description} \cr
   \code{flux_mm} \tab \mjseqn{F} \tab mm/m2/TS \tab flux or flow in unit area \cr
   \code{atmos_precipitation_mm} \tab \mjseqn{P} \tab mm/m2/TS \tab .. of precipitation \cr
   \code{atmos_rain_mm} \tab \mjseqn{P_r} \tab mm/m2/TS \tab .. of rain fall \cr
   \code{atmos_snow_mm} \tab \mjseqn{P_s} \tab mm/m2/TS \tab .. of snow fall \cr
   \code{atmos_evatrans_mm} \tab \mjseqn{E_a} \tab mm/m2/TS \tab .. of evapotranspiration \cr
   \code{land_intercept_mm} \tab \mjseqn{F_{itcp}} \tab mm/m2/TS \tab .. of interception \cr
   \code{land_infilt_mm} \tab \mjseqn{F_{iflt}} \tab mm/m2/TS \tab .. of infiltration \cr
   \code{land_runof_mm} \tab \mjseqn{F_{roff}} \tab mm/m2/TS \tab .. of runoff \cr
   \code{snow_melt_mm} \tab \mjseqn{F_{melt}} \tab mm/m2/TS \tab .. of snow melt \cr
   \code{soil_percola_mm} \tab \mjseqn{F_{pecl}} \tab mm/m2/TS \tab .. of percolation \cr
   \code{soil_interflow_mm} \tab \mjseqn{F_{intf}} \tab mm/m2/TS \tab .. of interflow \cr
   \code{ground_baseflow_mm} \tab \mjseqn{F_{base}} \tab mm/m2/TS \tab .. of baseflow \cr
   \code{ground_capillarise_mm} \tab \mjseqn{F_{capi}} \tab mm/m2/TS \tab .. of capillary rise \cr
   \code{ground_lateral_mm} \tab \mjseqn{F_{ltrl}} \tab mm/m2/TS \tab .. of lateral flow \cr
   \code{potentialFlux_mm} \tab \mjseqn{M} \tab mm/m2/TS \tab potential (maximal) flux or flow \cr
   \code{atmos_evatrans_mm} \tab \mjseqn{E_p} \tab mm/m2/TS \tab .. of evapotranspiration \cr
   \code{land_potentialInfilt_mm} \tab \mjseqn{M_{iflt}} \tab mm/m2/TS \tab .. of infiltration \cr
   \code{soil_potentialPercola_mm} \tab \mjseqn{M_{pecl}} \tab mm/m2/TS \tab .. of percolation \cr
   \code{soil_potentialInterflow_mm} \tab \mjseqn{M_{intf}} \tab mm/m2/TS \tab .. of subsurface flow \cr
   \code{ground_potentialBaseflow_mm} \tab \mjseqn{M_{base}} \tab mm/m2/TS \tab .. of baseflow \cr
   \code{soil_potentialCapirise_mm} \tab \mjseqn{M_{capi}} \tab mm/m2/TS \tab .. of capillary rise \cr
   \code{ground_potentialLateral_mm} \tab \mjseqn{M_{ltrl}} \tab mm/m2/TS \tab .. of lateral flow \cr
}

\itemize{
\item the stream flow will not in m3/TS or m3/s but also in flux dimension:
}\tabular{llll}{
   \strong{Variable} \tab \strong{Symbol} \tab \strong{Unit} \tab \strong{Description} \cr
   \code{streamflow_mm} \tab \mjseqn{Q} \tab mm/m2/TS \tab streamflow in flux dimension \cr
   \code{flow_runoff_mm} \tab \mjseqn{Q_{roff}} \tab mm/m2/TS \tab .. from runoff \cr
   \code{flow_interflow_mm} \tab \mjseqn{Q_{itfl}} \tab mm/m2/TS \tab .. from interflow \cr
   \code{flow_baseflow_mm} \tab \mjseqn{Q_{base}} \tab mm/m2/TS \tab .. from baseflow \cr
}


Additional there are also some symbols from the program-view:
\itemize{
\item \mjseqn{D}: the collection of all data of one group or layer
\itemize{
\item \mjseqn{D_{atms}}: data in \code{atmosLy}
\item \mjseqn{D_{land}}: data in \code{landLy}
\item \mjseqn{D_{snow}}: data in \code{snowLy}
\item \mjseqn{D_{soil}}: data in \code{soilLy}
\item \mjseqn{D_{grnd}}: data in \code{groundLy}
\item \mjseqn{D_{lssg}}: data in any (but the one) \code{landLy}, \code{snowLy}, \code{soilLy} or \code{groundLy}
}
\item \mjseqn{f}: function or modulr e.g. \mjseqn{f_{atmosSnow}} or \mjseqn{f_{inflt}}
}
}

\section{Parameter define}{
The parameters will be defined in every function topic
The naming convention for parameters consists of four parts: a prefix \code{param}, the process name
Parameters make up with prefix , Process name (sometimes same as Layer name), an abbreviation of the method in three small letters, and the original parameter name.
This allows for clear and consistent naming of parameters within the program.

\strong{param_process_mtd_k} some like \code{param_atmos_ubc_A0FORM}, \code{param_infilt_hbv_beta}

In every function topic, the range of parameters will be provided in the format of \verb{<low, upper>}. \link{all_param} list also all the parameters from \code{EDCHM}.
}

\section{Module define}{
In the last section, ten hydrological and two meteorological processes are defined in the conceptual view.
Now they will be defined in programming view:

For every process there is \strong{only one} output variable and several input data (data and parameters):\tabular{lll}{
   \strong{Process} \tab \strong{Main Input} \tab \strong{Output} \cr
   \code{intercep} \tab atmos_perc_mm \tab land_intercept_mm \cr
   \code{snowMelt} \tab snow_ice_mm \tab snow_melt_mm \cr
   \code{evatransActual} \tab layer_water_mm \tab layer_evatrans_mm \cr
   \code{infilt} \tab land_water_mm \tab land_infilt_mm \cr
   \code{percola} \tab soil_water_mm \tab soil_percola_mm \cr
   \code{inteflow} \tab soil_water_mm \tab soil_interflow_mm \cr
   \code{capirise} \tab ground_water_mm \tab ground_capirise_mm \cr
   \code{baseflow} \tab ground_water_mm \tab ground_baseflow_mm \cr
   \code{lateral} \tab ground_water_mm \tab ground_lateral_mm \cr
   \code{confluenIUH} \tab layer_flux_mm \tab flow_water_mm \cr
   \code{atmosSnow} \tab atmos_perc_mm \tab atmos_snow_mm \cr
   \code{evatransPotential} \tab atmos_DATA \tab evatrans_potential_mm \cr
}


And then a \code{module} is defined as: a specific process with different method from well-know models.
The name of module is composed of three parts: the process name and method name:

\strong{process_Method} some like \code{evatransActual_VIC} and \code{evatransActual_LiangLand}

The following figure shows all 12 processes and 62 modules that have been defined to date.

\if{html}{\figure{all_modula.svg}}
\if{latex}{\figure{all_modula.pdf}{options: width=150mm}}
}

\section{Build a model and calibrate the parameters}{
The generally way of using the regular model can be described as follows:
\enumerate{
\item Select a model that suits your research needs and acquire the necessary software (or script).
\item Prepare the input data and parameters and ensure they are accurate and complete.
\item Use observed data to calibrate the model's parameters.
\item Validate the optimized parameters by comparing them to known results or other models.
\item Apply the model and its optimized parameter sets to research.
}

But in EDCHM, you need to at first build a model. The process of building a model is an intricate and nuanced task.
It requires a deep understanding of the system of hydrological modelling to ensure that every component (process) is properly integrated and optimized.
\enumerate{
\item Identify the essential processes involved in your research.
\item Organize and connect these processes in a logical sequence that reflects the real-world system and the data-flow.
\item Select the appropriate method (module) for each process, taking into account the specific requirements and constraints of your research.
\item Assemble the model script using the chosen modules, and compile it into a working model that can be tested and refined.
}

By following this approach, you can create a custom-built model that is tailored to your specific research needs,
and that can be easily adjusted and updated as new information becomes available.

\strong{BUT} despite the complexity of building a model, EDCHM also offers powerful tools \link{build_modell} that make the process more straightforward and efficient.
EDCHM has defined a well-organized structure, so you just need to choose some necessary process and a method for every process.
Once you have chosen your processes and methods, \link{build_modell} will automatically generate a model script, and it includes all the input arguments.
In the same time it will also return the parameter ranges that are needed for calibration and validation.

In the standard structure, there are twelve processes available for selection.
However, you can also choose to use only a subset of these processes, such as the six minimal processes.
Certainly, you are not limited to the standard or minimal structures when building a model with \link{build_modell}.
Instead, you have the freedom to choose any combination of processes that are relevant to your research.

The mininal-, snow- and standard-structure are showed in the fowling figure:

\if{html}{\figure{structure_miniSnowStad.svg}}
\if{latex}{\figure{structure_miniSnowStad.pdf}{options: width=150mm}}

\link{EDCHM} offers also three compiled models \link{EDCHM_mini}, \link{EDCHM_snow} and \link{EDCHM_GR4J}.
\itemize{
\item \link{EDCHM_mini} and \link{EDCHM_snow} has used the mininal- and snow-structure with random method.
\item \link{EDCHM_GR4J} is just the GR4J from EDCHM version,
The results produced by \link{EDCHM_GR4J} have been verified against the original \code{\link[airGR:RunModel_GR4J]{airGR::RunModel_GR4J()}} implementation of the GR4J model, from \link{airGR}.
}

Overall, \link{build_modell} offers a flexible and customizable approach to building models, allowing you to create a model that is tailored to your specific research needs and requirements.
More details goto section \link{build_modell}.

After building the model, we can proceed to calibrate its parameters.
Typically, we need to evaluate the simulated results with observations to do this.
We can use the \link{hydroGOF} package, which offers many goodness-of-fit (GOF) functions, such as the Nash-Sutcliffe efficiency (NSE) and Kling-Gupta efficiency (KGE).
We still need an \strong{evaluation function}, which takes the parameters as input and produces the evaluation results as output.
These inputs and outputs are then given to a calibration algorithm function, which decides the next set of probe parameters based on the result of the GOF.

The evaluation function is more flexible because it depends on whether the parameters are lumped or distributed,
whether all or some of them need to be calibrated, and whether they are directly measured or calculated from categorical data such as soil class and land use.
EDCHM does not offer an evaluation function, but it is not difficult to create one.

EDCHM offers two calibration algorithm functions: \code{\link[=cali_DDS]{cali_DDS()}} \insertCite{DDS_Tolson_2007}{EDCHM} and \code{\link[=cali_UVS]{cali_UVS()}}.
\code{\link[=cali_DDS]{cali_DDS()}} is very powerful and recommended for most cases.
\code{\link[=cali_UVS]{cali_UVS()}} is recommended for specific tasks and is a very original algorithm.
For more details, see the \link{cali} section of the documentation.
}

\references{
\insertAllCited{}
}
