% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EDCHM-package.R
\docType{package}
\name{EDCHM-package}
\alias{EDCHM-package}
\title{basic concept of EDCHM}
\description{
EDCHM is a conceptional hydrological modelling framework and tools,
that allows user easy to build new hydrology models using various modular process methods.
}
\section{Overview of this document}{
Before using the \code{EDCHM} framework, it is necessary to have a basic understanding of its concepts.
}

\section{Layer and Process}{
\if{html}{\figure{edchm_layer.svg}}
\if{latex}{\figure{edchm_layer.pdf}{options: width=150mm}}

In the \code{EDCHM} framework, a \code{Layer} is defined as a vertical space with common characteristics.
\code{EDCHM} defines five basic layers:
\itemize{
\item \code{atmosLy}: only stores meteorological data but doesn't interact with other hydrological processes (in current version).
\item \code{snowLy}: is the layer of snow.
\item \code{landLy}: consists of two sublayers. Sublayer \code{intcpt} is a storage for intercepted water, which can be evaporated. Sublayer \code{land} serves only as a temperature layer for "pounded water" and doesn't have any storage capacity.
\item \code{soilLy}: is defined as an unsaturated zone between land surface and water table of groundwater.
\item \code{groundLy}: is defined as a saturated zone of groundwater.
}

In the \code{EDCHM} framework, a \code{Process} related to the movement or distribution of water on Earth.
Some of them occur in a single layer, some of them occur between two layers.
Here has defined 9 hydrological processes:
\itemize{
\item \link{snow} (snowMelt): melt the snow into liqued water.
\item \link{intercep}: intercept the water before ist arrive the land surface.
\item \link{evatransActual}: calculate the actual evapotranspiration from interception of water in th soil.
\item \link{infilt}: water from land surface enters the soil.
\item \link{percola}: soil water through the pores of aquifer movement to ground water.
\item \link{inteflow}: runoff in the soil layer, which from \code{soilLy} directly into the streams or rivers.
\item \link{capirise}: ground water upward to the unsaturated soil layer.
\item \link{baseflow}: the portion of groundwater, that directly into the streams or rivers.
\item \link{lateral}: water exchange with other basin  in the groundwater layer.
\item \link{confluenIUH}: runoff (runoff, interflow, baseflow) from the hydrological unit to the rivers,
in this process the water volume will not be changed but the distribution the time axis will be recalculeted with IUH (Instantaneous Unit Hydrograph) method.
}

In addition, there are two meteological process:
\itemize{
\item \link{atmosSnow}: devide the precipitation into rainfall and snowfall.
\item \link{evatransPotential}: calculates the potential evapotranspiration.
are both considered meteorological processes because they can be directly obtained from meteorological datasets or calculated using only meteorological data.
The results of these processes serve always as input data for hydrological processes.
\code{evatransPotential} is a crucial step in determining the actual evapotranspiration by most hydrological models.
}
}

\section{Variable and Parameter define}{
With a clear understanding of layers and processes, we can now move on to the basic definitions in the context of modeling.

All variable names in the EDCHM framework are composed of three parts: a \strong{group-name}, a \strong{physical-name} and a \strong{variable-units}
These parts are separated by an underscore \verb{_}.
\itemize{
\item \code{group-name}: name of the \code{Layer} in which the variable is located.
Sometimes it can also be the Process name or \code{time}, one important dimension.
The \code{group-name} is limited to a maximum of 8 characters and must be in lowercase letters.
\item \code{physical-name}: the physical variable name, and it uses \emph{camelCase} to combine multiple words. And the water volume will always simplified as \code{water}.
\item \code{variable-units}: the physical units of the variable
To simplify the program, all time-dependent variables use \code{TS} as the time unit, which is defined by the model, it can be 1 hour, 4, 12, 24 hours and so on,
but the time unit is not included in the variable name.
Additionally, all variables are assumed to be homogeneous in the area, so the area unit square meter (\code{m2}) is also not included in the variable name.
}

\strong{group_variableName_unit} some like \code{land_water_mm}, \code{atmos_temperature_Cel}

\loadmathjax

The following tables list the model variables and their corresponding formula symbols used in the \code{EDCHM}:
\itemize{
\item some state variables and Capicity of the layer storage:
}\tabular{llll}{
   \strong{Variable} \tab \strong{Symbol} \tab \strong{Unit} \tab \strong{Description} \cr
   \code{water_mm} \tab \mjseqn{W} \tab mm/m2 \tab water volume in one \code{Layer} \cr
   \code{land_water_mm} \tab \mjseqn{W_{land}} \tab mm/m2 \tab .. in \code{landLy} \cr
   \code{land_interceptWater_mm} \tab \mjseqn{W_{itcp}} \tab mm/m2 \tab .. in \code{landLy} (intercepted) \cr
   \code{snow_ice_mm} \tab \mjseqn{W_{snow}} \tab mm/m2 \tab .. in \code{snowLy} (equal water) \cr
   \code{soil_water_mm} \tab \mjseqn{W_{soil}} \tab mm/m2 \tab .. in \code{soilLy} \cr
   \code{ground_water_mm} \tab \mjseqn{W_{grnd}} \tab mm/m2 \tab .. in \code{groundLy} \cr
   \code{capacity_mm} \tab \mjseqn{C} \tab mm/m2 \tab maximal capacity of storage in one \code{Layer} \cr
   \code{land_interceptCapacity_mm} \tab \mjseqn{C_{itcp}} \tab mm/m2 \tab .. in \code{landLy} (intercepted) \cr
   \code{soil_capacity_mm} \tab \mjseqn{C_{soil}} \tab mm/m2 \tab .. in \code{soilLy} \cr
   \code{ground_capacity_mm} \tab \mjseqn{C_{grnd}} \tab mm/m2 \tab . in \code{groundLy} \cr
}

\itemize{
\item some flux variables and potential flux:
}\tabular{llll}{
   \strong{Variable} \tab \strong{Symbol} \tab \strong{Unit} \tab \strong{Description} \cr
   \code{flux_mm} \tab \mjseqn{F} \tab mm/m2/TS \tab flux or flow in unit area \cr
   \code{atmos_precipitation_mm} \tab \mjseqn{P} \tab mm/m2/TS \tab .. of precipitation \cr
   \code{atmos_rain_mm} \tab \mjseqn{P_r} \tab mm/m2/TS \tab .. of rain fall \cr
   \code{atmos_snow_mm} \tab \mjseqn{P_s} \tab mm/m2/TS \tab .. of snow fall \cr
   \code{atmos_evatrans_mm} \tab \mjseqn{E_a} \tab mm/m2/TS \tab .. of evapotranspiration \cr
   \code{land_intercept_mm} \tab \mjseqn{F_{itcp}} \tab mm/m2/TS \tab .. of interception \cr
   \code{land_infilt_mm} \tab \mjseqn{F_{iflt}} \tab mm/m2/TS \tab .. of infiltration \cr
   \code{land_runof_mm} \tab \mjseqn{F_{roff}} \tab mm/m2/TS \tab .. of runoff \cr
   \code{snow_melt_mm} \tab \mjseqn{F_{melt}} \tab mm/m2/TS \tab .. of snow melt \cr
   \code{soil_percola_mm} \tab \mjseqn{F_{pecl}} \tab mm/m2/TS \tab .. of percolation \cr
   \code{soil_interflow_mm} \tab \mjseqn{F_{intf}} \tab mm/m2/TS \tab .. of interflow \cr
   \code{ground_baseflow_mm} \tab \mjseqn{F_{base}} \tab mm/m2/TS \tab .. of baseflow \cr
   \code{ground_capillarise_mm} \tab \mjseqn{F_{capi}} \tab mm/m2/TS \tab .. of capillary rise \cr
   \code{ground_lateral_mm} \tab \mjseqn{F_{ltrl}} \tab mm/m2/TS \tab .. of lateral flow \cr
   \code{potentialFlux_mm} \tab \mjseqn{M} \tab mm/m2/TS \tab potential (maximal) flux or flow \cr
   \code{atmos_evatrans_mm} \tab \mjseqn{E_p} \tab mm/m2/TS \tab .. of evapotranspiration \cr
   \code{land_potentialInfilt_mm} \tab \mjseqn{M_{iflt}} \tab mm/m2/TS \tab .. of infiltration \cr
   \code{soil_potentialPercola_mm} \tab \mjseqn{M_{pecl}} \tab mm/m2/TS \tab .. of percolation \cr
   \code{soil_potentialInterflow_mm} \tab \mjseqn{M_{intf}} \tab mm/m2/TS \tab .. of subsurface flow \cr
   \code{ground_potentialBaseflow_mm} \tab \mjseqn{M_{base}} \tab mm/m2/TS \tab .. of baseflow \cr
   \code{soil_potentialCapirise_mm} \tab \mjseqn{M_{capi}} \tab mm/m2/TS \tab .. of capillary rise \cr
   \code{ground_potentialLateral_mm} \tab \mjseqn{M_{ltrl}} \tab mm/m2/TS \tab .. of lateral flow \cr
}

\itemize{
\item the stream flow will not in m3/TS or m3/s but also in flux dimension:
}\tabular{llll}{
   \strong{Variable} \tab \strong{Symbol} \tab \strong{Unit} \tab \strong{Description} \cr
   \code{streamflow_mm} \tab \mjseqn{Q} \tab mm/m2/TS \tab streamflow in flux dimension \cr
   \code{flow_runoff_mm} \tab \mjseqn{Q_{roff}} \tab mm/m2/TS \tab .. from runoff \cr
   \code{flow_interflow_mm} \tab \mjseqn{Q_{itfl}} \tab mm/m2/TS \tab .. from interflow \cr
   \code{flow_baseflow_mm} \tab \mjseqn{Q_{base}} \tab mm/m2/TS \tab .. from baseflow \cr
}


Additional there are also some symbols from the program-view:
\itemize{
\item \mjseqn{D}: the collection of all data of one group or layer
\itemize{
\item \mjseqn{D_{atms}}: data in \code{atmosLy}
\item \mjseqn{D_{land}}: data in \code{landLy}
\item \mjseqn{D_{snow}}: data in \code{snowLy}
\item \mjseqn{D_{soil}}: data in \code{soilLy}
\item \mjseqn{D_{grnd}}: data in \code{groundLy}
\item \mjseqn{D_{lssg}}: data in any (but the one) \code{landLy}, \code{snowLy}, \code{soilLy} or \code{groundLy}
}
\item \mjseqn{f}: function or modular e.g. \mjseqn{f_{atmosSnow}} or \mjseqn{f_{inflt}}
}
}

\section{Parameter define}{
The parameters will be defined in every function topic
The naming convention for parameters consists of four parts: a prefix \code{param}, the process name
Parameters make up with prefix , Process name (sometimes same as Layer name), an abbreviation of the method in three small letters, and the original parameter name.
This allows for clear and consistent naming of parameters within the program.

\strong{param_process_mtd_k} some like \code{param_atmos_ubc_A0FORM}, \code{param_infilt_hbv_beta}

In every function topic, the range of parameters will be provided in the format of \verb{<low, upper>}. \link{all_param} list also all the parameters from \code{EDCHM}.
}

\section{Modula define}{
In the last section, ten hydrological and two meteorological processes are defined in the conceptual view.
Now they will be defined in programming view:

For every process there is \strong{only one} output variable and several input data (data and parameters):\tabular{lll}{
   \strong{Process} \tab \strong{Main Input} \tab \strong{Output} \cr
   \code{intercep} \tab atmos_perc_mm \tab land_intercept_mm \cr
   \code{snowMelt} \tab snow_ice_mm \tab snow_melt_mm \cr
   \code{evatransActual} \tab layer_water_mm \tab layer_evatrans_mm \cr
   \code{infilt} \tab land_water_mm \tab land_infilt_mm \cr
   \code{percola} \tab soil_water_mm \tab soil_percola_mm \cr
   \code{inteflow} \tab soil_water_mm \tab soil_interflow_mm \cr
   \code{capirise} \tab ground_water_mm \tab ground_capirise_mm \cr
   \code{baseflow} \tab ground_water_mm \tab ground_baseflow_mm \cr
   \code{lateral} \tab ground_water_mm \tab ground_lateral_mm \cr
   \code{confluenIUH} \tab layer_flux_mm \tab flow_water_mm \cr
   \code{atmosSnow} \tab atmos_perc_mm \tab atmos_snow_mm \cr
   \code{evatransPotential} \tab atmos_DATA \tab evatrans_potential_mm \cr
}


And then a \code{modula} is defined as: a specific process with different method from well-know models.
The name of modula is composed of three parts: the process name and method name:

\strong{process_Method} some like \code{evatransActual_VIC} and \code{evatransActual_LiangLand}

The following figure shows all 12 processes and 62 modules that have been defined to date.

\if{html}{\figure{all_modula.svg}}
\if{latex}{\figure{all_modula.pdf}{options: width=150mm}}
}

\section{Build a model and calibrate the parameters}{
more see
}

\references{
\insertAllCited{}
}
