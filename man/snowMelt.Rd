% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{snowMelt}
\alias{snowMelt}
\alias{snowMelt_Kustas}
\alias{snowMelt_Factor}
\title{\strong{snow}}
\usage{
snowMelt_Kustas(
  snow_ice_mm,
  atmos_temperature_Cel,
  atmos_netRadiat_MJ,
  time_step_h,
  param_snow_kus_fE,
  param_snow_kus_fT
)

snowMelt_Factor(
  snow_ice_mm,
  atmos_temperature_Cel,
  time_step_h,
  param_snow_fac_f,
  param_snow_fac_Tmelt
)
}
\arguments{
\item{snow_ice_mm}{(mm/m2) water equivalent of \strong{ice} in snowpack}

\item{atmos_temperature_Cel}{(Cel) the average air temperature in the time phase}

\item{atmos_netRadiat_MJ}{(MJ/m2/TS) the balance between the energy absorbed, reflected and emitted by the earths surface or the difference between the incoming net shortwave (Rns) and the net outgoing longwave (Rnl) radiation}

\item{time_step_h}{<1, 24> (h) time step in hour}

\item{param_snow_kus_fE}{<0.0005, 0.003> (mm/m2/MJ) snow melt temperature parameter for \code{\link[=snowMelt_Factor]{snowMelt_Factor()}}}

\item{param_snow_kus_fT}{<0.05, 1> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter for \code{\link[=snowMelt_Factor]{snowMelt_Factor()}}}

\item{param_snow_fac_f}{<0.05, 2> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter for \code{\link[=snowMelt_Factor]{snowMelt_Factor()}}}

\item{param_snow_fac_Tmelt}{<0, 3> (Cel) snow melt temperature parameter for \code{\link[=snowMelt_Factor]{snowMelt_Factor()}}}
}
\value{
snow_melt_mm (mm/m2) melted snow
}
\description{
\loadmathjax

Under the concept of the conceptual HM, the melt of snowpack is always calculated by
the energy availability (the state-variable temperature \mjseqn{T} or flux-variable (nett-) radiation \mjseqn{Rn})
and the solid water (snow or ice) availability \mjseqn{W_{snow}} of the snowpack.

Some more complex processes, such as refrozen and residual water, will be ignored.
To simplify the model, the layer snowLy will store only the solid water and will melt it as much as possible when the energy is sufficient.

So we can give the function from:

\mjsdeqn{F_{melt} = f_{snowMelt}(D_{atms}, D_{snow})}

to:
\mjsdeqn{F_{melt}  = f_{snowMelt}(T, ...)}
\mjsdeqn{F_{melt} \leq W_{snow} }

where
\itemize{
\item \mjseqn{F_{melt}} is \code{snow_melt_mm}
\item \mjseqn{W_{snow}} is \code{snow_ice_mm}
\item \mjseqn{T} is average temperature
}

Then the different \code{snowMelt} methods will estimate the maximal snow melt \mjseqn{M_{max}}.

The output density distribution from 2 methods:

\if{html}{\figure{mdl_snowMelt.svg}}
\if{latex}{\figure{mdl_snowMelt.pdf}{options: width=140mm}}
}
\section{\strong{_Kustas} \insertCite{snow_kustas_1994}{EDCHM}:}{
\if{html}{\figure{mdl_snowMelt_kus.svg}}
\if{latex}{\figure{mdl_snowMelt_kus.pdf}{options: width=140mm}}

\mjsdeqn{F_{melt}  = m_T T + m_E R_n}
but due to the temperature is one energy-state-variable,
in order to adjust to subday scale we need to add a new time interval \mjseqn{t_h} from 1 to 24 hour
\mjsdeqn{F_{melt}  = m_T T t_h + m_E R_n}
where
\itemize{
\item \mjseqn{m_T} is \code{param_snow_kus_fT}
\item \mjseqn{m_E} is \code{param_snow_kus_fE}
\item \mjseqn{R_n} is daily net radiation
}
}

\section{\strong{_Factor} \insertCite{phyHydro_dingman_2014}{EDCHM}:}{
\if{html}{\figure{mdl_snowMelt_fac.svg}}
\if{latex}{\figure{mdl_snowMelt_fac.pdf}{options: width=140mm}}

\mjsdeqn{F_{melt}  = m_T (T-T_b), \quad T > T_b}
where
\itemize{
\item \mjseqn{m_T} is \code{param_snow_fac_f}
\item \mjseqn{T_b} is \code{param_snow_fac_Tmelt}
}
}

\references{
\insertAllCited{}
}
